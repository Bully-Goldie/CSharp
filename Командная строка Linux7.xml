<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Командная строка Linux</title>
  <link href="../Styles/template.css" rel="stylesheet" type="text/css"/>
</head>

<body id="x978549602303" xml:lang="en-US">
  <div class="Basic-Text-Frame">
     <h1 id="toc_marker-12" xml:lang="ru-RU">9. Привилегии</h1>

    <p class="Normal0" xml:lang="ru-RU">Операционные системы, следующие традициям Unix, отличаются от систем, следующих традициям MS-DOS, тем, что являются не только <em>многозадачными</em>, но и <em>многопользовательскими</em>.</p>

    <p xml:lang="ru-RU">Что это означает на самом деле? Это означает, что компьютером могут одновременно пользоваться несколько человек. Несмотря на то что обычно компьютер имеет всего одну клавиатуру и монитор, это обстоятельство не мешает совместному пользованию. Например, если компьютер подключен к локальной сети или к Интернету, удаленные пользователи смогут зайти на него через <span class="command char-style-override-1">ssh</span> (secure shell — безопасная командная оболочка) и выполнять операции. Фактически удаленные пользователи могут запускать приложения с графическим интерфейсом и получать изображение на удаленном дисплее. X Window System поддерживает такую возможность изначально.</p>

    <p xml:lang="ru-RU">Поддержка многопользовательского режима работы — не недавнее «изобретение» Linux, а возможность, глубоко внедренная в архитектуру операционной системы. Учитывая окружение, в котором создавалась система Unix, это имело определенный смысл. В те времена, когда компьютеры еще не были «персональными», они были большими и дорогими. Типичная компьютерная система университета, например, состояла из большого центрального компьютера в одном здании и терминалов, разбросанных по всему университетскому городку и соединенных с большим центральным компьютером. Компьютер мог одновременно обслуживать множество пользователей.</p>

    <p xml:lang="ru-RU">Чтобы подобная возможность имела практическую ценность, необходим способ определенной «изоляции» пользователей друг от друга. В конце концов, действия рядового пользователя не должны приводить к аварийному завершению работы компьютера, и ни один пользователь не должен иметь возможность вносить изменения в файлы, принадлежащие другому пользователю.</p>

    <p xml:lang="ru-RU">В данной главе мы рассмотрим эту важную сторону безопасности системы и познакомимся со следующими командами:</p>

    <p class="ListBul" xml:lang="ru-RU"><span class="command char-style-override-1">• </span><span class="command char-style-override-1">id</span> — выводит информацию об идентичности пользователя.</p>

    <p class="ListBul" xml:lang="ru-RU"><span class="command char-style-override-1">• </span><span class="command char-style-override-1">chmod</span> — изменяет режим доступа к файлу.</p>

    <p class="ListBul" xml:lang="ru-RU"><span class="command char-style-override-1">• </span><span class="command char-style-override-1">umask</span> — определяет разрешения доступа к файлам по умолчанию.</p>

    <p class="ListBul" xml:lang="ru-RU"><span class="command char-style-override-1">• </span><span class="command char-style-override-1">su</span> — запускает командную оболочку от имени другого пользователя.</p>

    <p class="ListBul" xml:lang="ru-RU"><span class="command char-style-override-1">• sudo</span> — выполняет команду от имени другого пользователя.</p>

    <p class="ListBul" xml:lang="ru-RU"><span class="command char-style-override-1">• chown</span> — изменяет владельца файла.</p>

    <p class="ListBul" xml:lang="ru-RU"><span class="command char-style-override-1">• chgrp</span> — изменяет группу файла.</p>

    <p class="ListBul" xml:lang="ru-RU"><span class="command char-style-override-1">• passwd</span> — изменяет пароль пользователя.</p>

    <h2 id="toc_marker-12-1" xml:lang="ru-RU">Владельцы, члены группы и все остальные</h2>

    <p class="Normal0" xml:lang="ru-RU">Знакомясь с системой в главе 4, вы уже сталкивались со следующей проблемой при исследовании файлов, таких как <em>/etc/shadow</em>:</p>

    <p class="list-first">[me@linuxbox ~]$ <strong>file /etc/shadow</strong></p>

    <p class="listing-body">/etc/shadow: Обычный файл, нет прав на чтение</p>

    <p class="listing-body">[me@linuxbox ~]$ <strong>less</strong><strong> /etc/shadow</strong></p>

    <p class="list-last">/etc/shadow: Отказано в доступе</p>

    <p xml:lang="ru-RU">Причина этого сообщения об ошибке заключается в том, что обычные пользователи не имеют права читать этот файл.</p>

    <p xml:lang="ru-RU">В модели безопасности Unix пользователь может <em>владеть</em> файлами и каталогами. Если пользователь владеет файлом или каталогом, он может управлять доступом к нему. Пользователи могут также принадлежать <em>группе</em>, состоящей из одного или нескольких пользователей, и получить права доступа к файлам и каталогам для членов группы, которые определяются владельцами. Кроме прав доступа для группы, владелец может также определить некоторые права доступа для всех остальных, их в терминологии Unix называют <em>мир</em> (world). Получить информацию о своей идентичности можно с помощью команды <span class="command char-style-override-1">id</span>:</p>

    <p class="list-first">[me@linuxbox ~]$ <strong>id</strong></p>

    <p class="list-last">uid=500(me) gid=500(me) groups=500(me)</p>

    <p xml:lang="ru-RU">Давайте рассмотрим этот вывод. Когда создается учетная запись пользователя, ей присваивается число, которое называют <em>идентификатором пользователя</em> (user ID), или <em>uid</em>. Это число, исключительно ради удобства человека, отображается как имя пользователя. Пользователю назначается <em>идентификатор основной группы</em> (primary group ID), или <em>gid</em>, и дополнительно пользователь может включаться в состав других групп. Предыдущий пример взят из системы Fedora. В других системах, таких как Ubuntu, вывод команды может немного отличаться.</p>

    <p class="list-first">[me@linuxbox ~]$ <strong>id</strong></p>

    <p class="listing-body">uid=1000(me) gid=1000(me)</p>

    <p class="list-last">groups=4(adm),20(dialout),24(cdrom),25(floppy),29(audio),30(dip),44(video),<br/>

 46(plugdev),108(lpadmin),114(admin),1000(me)</p>

    <p xml:lang="ru-RU">Как видите, числа uid и gid отличаются. Это объясняется тем, что в Fedora нумерация учетных записей обычных пользователей начинается с 500, тогда как в Ubuntu — с 1000. Кроме того, пользователь в Ubuntu принадлежит множеству других групп. Это связано с особенностями управления привилегиями доступа к системным устройствам и службам в Ubuntu.</p>

    <p xml:lang="ru-RU">А где же вся эта информация хранится? Как и многое другое в Linux, она хранится в паре текстовых файлов. Учетные записи пользователей хранятся в файле <em>/etc</em><em>/passwd</em>, а информация о группах — в файле <em>/etc/group</em>. Когда создаются новые учетные записи и группы, эти файлы изменяются вместе с файлом <em>/etc</em><em>/shadow</em>, где хранится информация о пароле пользователя. Для каждой учетной записи в файле <em>/e</em><em>tc/passwd</em> определяется имя пользователя (для входа), числовой идентификатор пользователя (uid), числовой идентификатор основной группы (gid), действительное имя пользователя, путь к домашнему каталогу и командная оболочка входа (login shell). Заглянув внутрь <em>/etc/passwd</em> и <em>/etc/group</em>, можно заметить, что помимо учетных записей обычных пользователей здесь также хранятся учетные записи суперпользователя (uid 0) и различных других системных пользователей.</p>

    <p xml:lang="ru-RU">В главе 10, где рассказывается о процессах, вы узнаете, что некоторые из этих других «пользователей» в действительности существуют не просто так.</p>

    <p xml:lang="ru-RU">Несмотря на то что во многих Unix-подобных системах обычных пользователей включают в общую группу, такую как <em>users</em>, в современных дистрибутивах Linux принято создавать для каждого пользователя свою, уникальную группу с одним членом и именем, совпадающим с именем пользователя. Это упрощает распределение определенных типов привилегий.</p>

    <h2 id="toc_marker-12-2" xml:lang="ru-RU">Чтение, запись и выполнение</h2>

    <p class="Normal0" xml:lang="ru-RU">Права доступа к файлам и каталогам определяются в терминах права на чтение, права на запись и права на выполнение. Если взглянуть на вывод команды <span class="command char-style-override-1">ls</span>, можно увидеть некоторые подсказки о том, как эти права реализованы:</p>

    <p class="list-first">[me@linuxbox ~]$ <strong>&gt; foo.txt</strong></p>

    <p class="listing-body">[me@linuxbox ~]$ <strong>ls -l foo.txt</strong></p>

    <p class="list-last">-rw-rw-r-- 1 me&#160;&#160;&#160;&#160;me&#160;&#160;&#160;0 2012-03-06 14:52 foo.txt</p>

    <p xml:lang="ru-RU">Первые 10 символов в выводе — это <em>атрибуты файла</em> (рис. 9.1). Первый из этих символов определяет <em>тип файла</em>. В табл. 9.1 перечислены типы файлов, которые чаще всего встречаются на практике (существуют также другие, реже используемые типы файлов). Остальные девять символов в атрибутах файла называются <em>режимом доступа к файлу</em> и представляют права на чтение, запись и выполнение для владельца файла, группы — владельца файла и всех остальных.</p>

    <p class="Pic-yakor" xml:lang="ru-RU"><span><img class="frame-2" src="../Images/384670.png" alt="384670.png"/></span>&#160;</p>

    <p class="Pic-nazv" xml:lang="ru-RU"><strong>Рис. 9.1.</strong> Атрибуты файла</p>

    <p xml:lang="ru-RU">Установленные атрибуты режима <span class="command char-style-override-1">r</span>, <span class="command char-style-override-1">w</span> и <span class="command char-style-override-1">x</span> оказывают определенное влияние на файлы и каталоги, как показано в табл. 9.2.</p>

    <p class="Tabl-head" xml:lang="ru-RU"><strong>Таблица 9.1.</strong> Типы файлов</p>

    <table id="table-25" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

</colgroup>

      <tbody>      <tr>      <td class="Cell-Style-2 cell-style-override-1">       <p class="Tabl-head" xml:lang="ru-RU">Атрибут</p>

</td>

      <td class="Cell-Style-2 cell-style-override-1">       <p class="Tabl-head" xml:lang="ru-RU">Тип файла</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-1">       <p class="Tabl-body" xml:lang="ru-RU">Обычный файл</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">d</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-1">       <p class="Tabl-body" xml:lang="ru-RU">Каталог</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">l</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-1">       <p class="Tabl-body" xml:lang="ru-RU">Символическая ссылка. Обратите внимание, что для символических ссылок все остальные атрибуты имеют значение <span class="command char-style-override-4">rwxrwxrwx</span> и не отражают действительные права доступа. Фактические права доступа к файлу определяются атрибутами самого файла, на который указывает символическая ссылка</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">c</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-1">       <p class="Tabl-body" xml:lang="ru-RU"><em>Специальный файл символьного устройства</em>. Файлы этого типа соответствуют устройствам, таким как терминал или модем, которые обрабатывают данные как потоки байтов</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">b</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-1">       <p class="Tabl-body" xml:lang="ru-RU"><em>Специальный файл блочного устройства</em>. Файлы этого типа соответствуют устройствам, таким как привод жесткого диска или CD-ROM, которые обрабатывают данные блоками</p>

</td>

</tr>

</tbody>
    </table>

    <p class="No-Paragraph-Style"></p>

    <p class="Tabl-head" xml:lang="ru-RU"><strong>Таблица 9.2.</strong> Атрибуты прав доступа</p>

    <table id="table-26" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

      <col/>

</colgroup>

      <thead>      <tr>      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Атрибут</p>

</td>

      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Файлы</p>

</td>

      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Каталоги</p>

</td>

</tr>

</thead>

      <tbody>      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">r</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Разрешается открывать и читать содержимое файла</p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Разрешается читать содержимое каталога, если вместе с этим атрибутом установлен атрибут права на выполнение</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">w</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Разрешается записывать в файл или усекать его; однако этот атрибут не дает права переименовывать и удалять файлы. Возможность переименования и удаления файлов определяется атрибутами вмещающего каталога</p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Разрешается создавать, удалять и переименовывать файлы внутри каталога, если вместе с этим атрибутом установлен атрибут права на выполнение</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">x</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Разрешается интерпретировать файл как программу и выполнять ее. Файлы, содержащие программы на языках сценариев, дополнительно должны быть доступны для чтения, иначе они не будут выполняться</p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Разрешается входить в каталог, то есть выполнять команду <span class="command char-style-override-4">cd</span> для перехода в него</p>

</td>

</tr>

</tbody>
    </table>

    <p class="No-Paragraph-Style"></p>

    <p xml:lang="ru-RU">В табл. 9.3 приводится несколько примеров установки атрибутов файлов.</p>

    <p class="Tabl-head" xml:lang="ru-RU"><strong>Таблица 9.3.</strong> Примеры установки атрибутов прав доступа к файлам</p>

    <table id="table-27" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

</colgroup>

      <tbody>      <tr>      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Атрибуты файлов</p>

</td>

      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Значение</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-rwx------</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Обычный файл, доступный владельцу для чтения, записи и выполнения. Никто другой не имеет прав доступа к файлу</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-rw-------</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Обычный файл, доступный владельцу для чтения и записи. Никто другой не имеет прав доступа к файлу</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-rw-r--r--</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Обычный файл, доступный владельцу для чтения и записи. Члены группы имеют право читать файл. Все остальные имеют право читать файл</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-rwxr-xr-x</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Обычный файл, доступный владельцу для чтения, записи и выполнения. Все остальные имеют право читать и выполнять файл</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-rw-rw----</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Обычный файл, доступный для чтения и записи только владельцу и членам группы</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">Lrwxrwxrwx</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Символическая ссылка. Все символические ссылки имеют недействительные значения атрибутов. Фактические права доступа к файлу определяются атрибутами самого файла, на который указывает символическая ссылка</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">drwxrwx---</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Каталог. Владелец и члены группы могут входить в каталог, создавать, переименовывать и удалять файлы внутри каталога</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">drwxr-x---</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Каталог. Владелец может входить в каталог, создавать, переименовывать и удалять файлы внутри каталога. Члены группы могут входить в каталог, но не могут создавать, переименовывать и удалять файлы внутри каталога</p>

</td>

</tr>

</tbody>
    </table>

    <p class="No-Paragraph-Style"></p>

    <h3 xml:lang="ru-RU">chmod — изменение режима доступа к файлу</h3>

    <p class="Normal0" xml:lang="ru-RU">Для изменения режима (прав) доступа к файлу или каталогу используется команда <span class="command char-style-override-1">chmod</span>. Имейте в виду, что права доступа к файлу или каталогу может изменить только владелец. Команда <span class="command char-style-override-1">chmod</span> поддерживает два разных способа изменения режима: с использованием восьмеричных чисел и символического представления. Сначала рассмотрим использование восьмеричных чисел.</p>

    <p class="Vrezka-head" xml:lang="ru-RU">А почему именно восьмеричное?</p>

    <p class="Vrezka-body" xml:lang="ru-RU"><em>Восьмеричная</em> (по основанию 8) и родственная ей <em>шестнадцатеричная</em> (по основанию 16) системы счисления часто используются для представления чисел в компьютерах. Мы, люди, рождаемся с десятью пальцами на руках (по крайней мере большинство из нас), поэтому для счета используем систему счисления с основанием 10. Компьютеры, напротив, рождаются с одним пальцем и потому используют для вычисления <em>двоичную</em> систему счисления (по основанию 2). Их числа состоят всего из двух цифр, нуля и единицы. Поэтому в двоичной системе счет выглядит так: 0, 1, 10, 11, 100, 101, 110, 111, 1000, 1001, 1010, 1011...</p>

    <p class="Vrezka-body" xml:lang="ru-RU">В восьмеричной системе используются цифры от нуля до семи: 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21...</p>

    <p class="Vrezka-body" xml:lang="ru-RU">В шестнадцатеричной системе используются цифры от нуля до девяти плюс буквы от A до F: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F, 10, 11, 12, 13...</p>

    <p class="Vrezka-body" xml:lang="ru-RU">В двоичной системе счисления еще можно увидеть смысл (поскольку компьютеры имеют лишь один палец), но в чем польза восьмеричной и шестнадцатеричной систем счисления? Они были придуманы для удобства человека. Очень часто небольшие порции данных представляются в компьютерах битовыми шаблонами. Примером может служить представление цвета в формате RGB. В большинстве дисплеев компьютеров цвет каждого пикселя определяется тремя цветовыми составляющими: 8 бит для красного цвета, 8 бит для зеленого и 8 бит для синего. Красивый сине-голубой цвет можно представить в виде 24-разрядного числа: 010000110110111111001101.</p>

    <p class="Vrezka-body" xml:lang="ru-RU">Хотели бы вы видеть и читать такие числа весь день? Я так не думаю. Именно в таких случаях на выручку приходят другие системы счисления. Каждая цифра в шестнадцатеричной системе счисления представляет четыре двоичные цифры. В восьмеричной системе каждой цифре соответствуют три двоичные цифры. То есть 24-разрядное значение сине-голубого цвета можно сжать до 6-значного шестнадцатеричного числа: 436FCD. Поскольку цифры в шестнадцатеричных числах «выстраиваются в ряд» с битами в двоичных числах, можно заметить, что красный компонент нашего цвета имеет значение 43, зеленый — 6F и синий — CD.</p>

    <p class="Vrezka-body-Last" xml:lang="ru-RU">В наше время шестнадцатеричная форма записи получила большее распространение, чем восьмеричная, но, как будет показано ниже, восьмеричная форма записи все еще оказывается весьма полезной для представления групп из трех двоичных битов.</p>

    <h4 xml:lang="ru-RU">Восьмеричное представление</h4>

    <p class="Normal0" xml:lang="ru-RU">При использовании восьмеричной формы записи шаблон желаемых привилегий определяется восьмеричными числами. Так как каждая цифра в восьмеричном числе определяется тремя двоичными разрядами, она точно отображается в схему хранения режима доступа к файлу. В табл. 9.4 поясняется, что мы имеем в виду.</p>

    <p class="Tabl-head" xml:lang="ru-RU"><strong>Таблица 9.4.</strong> Режимы доступа к файлу в двоичном и восьмеричном представлениях</p>

    <table id="table-28" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

      <col/>

</colgroup>

      <tbody>      <tr>      <td class="Cell-Style-2 cell-style-override-3">       <p class="Tabl-head" xml:lang="ru-RU">Восьмеричное</p>

</td>

      <td class="Cell-Style-2 cell-style-override-3">       <p class="Tabl-head" xml:lang="ru-RU">Двоичное</p>

</td>

      <td class="Cell-Style-2 cell-style-override-3">       <p class="Tabl-head" xml:lang="ru-RU">Режим доступа</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">0</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">000</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">---</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">1</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">001</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">--x</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">2</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">010</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-w-</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">3</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">011</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-wx</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">4</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">100</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">r--</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">5</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">101</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">r-x</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">6</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">110</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">rw-</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">7</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">111</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">rwx</span></p>

</td>

</tr>

</tbody>
    </table>

    <p class="No-Paragraph-Style"></p>

    <p xml:lang="ru-RU">C помощью трех восьмеричных цифр мы можем определить режим доступа к файлу для владельца, для группы и для остального мира.</p>

    <p class="list-first">[me@linuxbox ~]$ <strong>&gt; foo.txt</strong></p>

    <p class="listing-body">[me@linuxbox ~]$ <strong>ls -l foo.txt</strong></p>

    <p class="listing-body">-rw-rw-r-- 1 me&#160;&#160;&#160;&#160;me&#160;&#160;&#160;0 2012-03-06 14:52 foo.txt</p>

    <p class="listing-body">[me@linuxbox ~]$ <strong>chmod 600 foo.txt</strong></p>

    <p class="listing-body">[me@linuxbox ~]$ <strong>ls -l foo.txt</strong></p>

    <p class="list-last">-rw------- 1 me&#160;&#160;&#160;&#160;me&#160;&#160;&#160;0 2012-03-06 14:52 foo.txt</p>

    <p xml:lang="ru-RU">Передав аргумент <span class="command char-style-override-1">600</span>, мы установили права для владельца, позволяющие ему читать данные из файла и записывать их в файл, и при этом отобрали все права у группы и остального мира. Несмотря на кажущееся неудобство необходимости запоминания соответствий между восьмеричными и двоичными представлениями, вам, скорее всего, придется использовать лишь несколько наиболее популярных шаблонов: 7 (<span class="command char-style-override-1">rwx</span>), 6 (<span class="command char-style-override-1">rw-</span>), 5 (<span class="command char-style-override-1">r-x</span>), 4 (<span class="command char-style-override-1">r--</span>) и 0 (<span class="command char-style-override-1">---</span>).</p>

    <h4 xml:lang="ru-RU">Символическое представление</h4>

    <p class="Normal0" xml:lang="ru-RU">Команда <span class="command char-style-override-1">chmod</span> поддерживает также символическую форму определения режимов доступа к файлу. Символическая форма записи делится на три части: для кого устанавливаются разрешения, какие операции с разрешениями будут выполняться и на какие разрешения эти операции будут влиять. Чтобы указать, для кого устанавливаются разрешения, используется комбинация символов <em>u</em>, <em>g</em>, <em>o</em> и <em>a</em>, как показано в табл. 9.5.</p>

    <p class="Tabl-head" xml:lang="ru-RU"><strong>Таблица 9.5.</strong> Символическая форма записи аргументов команды chmod</p>

    <table id="table-29" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

</colgroup>

      <tbody>      <tr>      <td class="Cell-Style-2 cell-style-override-3">       <p class="Tabl-head" xml:lang="ru-RU">Символ</p>

</td>

      <td class="Cell-Style-2 cell-style-override-3">       <p class="Tabl-head" xml:lang="ru-RU">Значение</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">u</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU">Сокращенно от <em>user</em> (пользователь), означает владельца файла или каталога</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">g</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU">Группа</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">o</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU">Сокращенно от <em>other</em> (другие, остальные), означает весь остальной мир</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">a</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU">Сокращенно от <em>all</em> (все); комбинация из всех трех символов: <em>u</em>, <em>g</em> и <em>o</em></p>

</td>

</tr>

</tbody>
    </table>

    <p class="No-Paragraph-Style"></p>

    <p xml:lang="ru-RU">Если не указан ни один символ, предполагается <span class="command char-style-override-1">a</span> (<em>all</em> — все). Операцией может быть знак <span class="command char-style-override-1">+</span>, соответствующий добавлению заданных разрешений, знак <span class="command char-style-override-1">-</span>, соответствующий отъему заданных разрешений, или знак <span class="command char-style-override-1">=</span>, указывающий, что только заданные разрешения должны быть установлены, а все остальные отобраны.</p>

    <p xml:lang="ru-RU">Разрешения определяются символами <span class="command char-style-override-1">r</span>, <span class="command char-style-override-1">w</span> и <span class="command char-style-override-1">x</span>. В табл. 9.6 перечислены некоторые примеры символической формы записи.</p>

    <p class="Tabl-head" xml:lang="ru-RU"><strong>Таблица 9.6.</strong> Примеры символической формы записи прав доступа к файлам</p>

    <table id="table-30" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

</colgroup>

      <tbody>      <tr>      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Атрибуты файлов</p>

</td>

      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Значение</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">u+x</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Добавляет право на выполнение, но только для владельца</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">u-x</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Отнимает право на выполнение у владельца</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">+x</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Добавляет право на выполнение для владельца, группы и остального мира. Эквивалент записи <span class="command char-style-override-4">a+x</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">o-rw</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Отнимает право на чтение и запись у всех, кроме владельца и группы</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">go=rw</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Устанавливает право на чтение и запись для всех, кроме владельца. Если прежде файл имел разрешение на выполнение для группы и всего мира, это право отнимается</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">u+x,go=rx</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Добавляет право на выполнение для владельца и устанавливает право на чтение и выполнение для группы и всего мира. При выполнении сразу нескольких операций с привилегиями они должны разделяться запятой</p>

</td>

</tr>

</tbody>
    </table>

    <p class="No-Paragraph-Style"></p>

    <p xml:lang="ru-RU">Кто-то предпочитает пользоваться восьмеричной формой записи, кому-то больше нравится символическая. Символическая форма записи удобна тем, что позволяет установить единственный атрибут, не влияя на остальные.</p>

    <p xml:lang="ru-RU">Дополнительную информацию и полный список параметров команды <span class="command char-style-override-1">chmod</span> можно найти на странице справочного руководства (<span class="command char-style-override-1">man</span>). А теперь несколько слов о параметре <span class="command char-style-override-1">--recursive</span>: он воздействует и на файлы, и на каталоги, поэтому он не так полезен, как можно было бы предположить, потому что редко требуется устанавливать одинаковые разрешения для файлов и каталогов.</p>

    <h3 xml:lang="ru-RU">Установка режима доступа к файлу с помощью графического интерфейса</h3>

    <p class="Normal0" xml:lang="ru-RU">Теперь, ознакомившись с тем, как устанавливаются разрешения для файлов и каталогов, вы лучше поймете диалоги установки разрешений в графическом интерфейсе. В Nautilus (GNOME) и Konqueror (KDE) можно щелкнуть правой кнопкой мыши на файле или на каталоге и вывести диалог со свойствами. На рис. 9.2 изображен такой диалог из KDE 3.5.</p>

    <p class="Pic-yakor" xml:lang="ru-RU"><span></span>&#160;</p>

    <p class="Pic-nazv" xml:lang="ru-RU"><strong>Рис. 9.2.</strong> Диалог со свойствами файла из KDE 3.5</p>

    <p xml:lang="ru-RU">Здесь вы видите, какие разрешения установлены для владельца, группы и остального мира. Если в KDE щелкнуть на кнопке <span class="interface char-style-override-2">Advanced Permissions</span> (Дополнительные разрешения), появится другой диалог, в котором можно будет установить атрибуты режима по отдельности. Еще один маленький шаг человека в большом мире под названием Командная строка!</p>

    <h3 xml:lang="ru-RU">umask — определение разрешений доступа к файлам по умолчанию</h3>

    <p class="Normal0" xml:lang="ru-RU">Команда <span class="command char-style-override-1">umask</span> определяет разрешения по умолчанию, которые устанавливаются для файла при его создании. В ней с помощью восьмеричной формы записи определяется битовая маска для сбрасываемых атрибутов режима доступа.</p>

    <p xml:lang="ru-RU">Взгляните:</p>

    <p class="list-first">[me@linuxbox ~]$ <strong>rm -f foo.txt</strong></p>

    <p class="listing-body">[me@linuxbox ~]$ <strong>umask</strong></p>

    <p class="listing-body">0002</p>

    <p class="listing-body">[me@linuxbox ~]$ <strong>&gt; foo.txt</strong></p>

    <p class="listing-body">[me@linuxbox ~]$ <strong>ls -l foo.txt</strong></p>

    <p class="list-last">-rw-rw-r-- 1 me&#160;&#160;&#160;&#160;me&#160;&#160;&#160;0 2012-03-06 14:53 foo.txt</p>

    <p xml:lang="ru-RU">Сначала мы удалили существующий файл <em>foo.txt</em>, чтобы, так сказать, начать с чистого листа. Далее мы выполнили команду <span class="command char-style-override-1">umask</span> без аргумента, чтобы увидеть текущее значение маски. Она вернула нам значение <span class="command char-style-override-1">0002</span> (часто также используется значение <span class="command char-style-override-1">0022</span>) — восьмеричное представление действующей маски. Затем мы создали новый файл <em>foo.txt</em> и вывели для него разрешения.</p>

    <p xml:lang="ru-RU">Как видите, владелец и группа получили права на чтение и запись, тогда как все остальные — только право на чтение. Весь мир не получил права на запись из-за значения маски. Давайте повторим пример, но на этот раз определим свою маску:</p>

    <p class="list-first">[me@linuxbox ~]$ <strong>rm foo.txt</strong></p>

    <p class="listing-body">[me@linuxbox ~]$ <strong>umask 0000</strong></p>

    <p class="listing-body">[me@linuxbox ~]$ <strong>&gt; foo.txt</strong></p>

    <p class="listing-body">[me@linuxbox ~]$ <strong>ls -l foo.txt</strong></p>

    <p class="list-last">-rw-rw-rw- 1 me&#160;&#160;&#160;&#160;me&#160;&#160;&#160;0 2012-03-06 14:58 foo.txt</p>

    <p xml:lang="ru-RU">После установки маски в значение <span class="command char-style-override-1">0000</span> (таким способом мы фактически выключили ее) вновь созданный файл получил разрешение на запись для всего мира. Чтобы лучше понять суть происходящего, мы снова должны вернуться к восьмеричным числам. Если развернуть маску в двоичное представление и сравнить ее с двоичным представлением атрибутов, можно понять, что произошло:</p>

    <table id="table-31" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

</colgroup>

      <tbody>      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Исходный режим доступа к файлу</p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">--- rw- rw- rw-</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Маска</p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">000 000 000 010</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Результат</p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">--- rw- rw- r--</span></p>

</td>

</tr>

</tbody>
    </table>

    <p class="No-Paragraph-Style"></p>

    <p xml:lang="ru-RU">Забудем пока про начальные нули (мы вернемся к ним чуть позже) и обратим внимание, что атрибут, соответствующий той позиции, где в маске стоит 1, был сброшен, — в данном случае право на запись для всего мира. Теперь понятно, что делает маска. В любой позиции, где в маске появляется 1, соответствующий атрибут сбрасывается. Если посмотреть на значение маски <span class="command char-style-override-1">0022</span>, легко увидеть, что оно делает:</p>

    <table id="table-32" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

</colgroup>

      <tbody>      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Исходный режим доступа к файлу</p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">--- rw- rw- rw-</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Маска</p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">000 000 010 010</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Результат</p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">--- rw- r-- r--</span></p>

</td>

</tr>

</tbody>
    </table>

    <p class="No-Paragraph-Style"></p>

    <p xml:lang="ru-RU">И снова атрибуты, соответствующие позициям, где в маске стоит 1, были сброшены. Поэкспериментируйте с другими значениями (попробуйте несколько 7), чтобы лучше усвоить, как действует маска. Закончив эксперименты, не забудьте все вернуть в исходное состояние:</p>

    <p class="list-one">[me@linuxbox ~]$ <strong>rm foo.txt; umask 0002</strong></p>

    <p class="Vrezka-head" xml:lang="ru-RU">некоторые специальные разрешения</p>

    <p class="Vrezka-body" xml:lang="ru-RU">Обычно разрешения в восьмеричном представлении мы видим как трехзначные числа, но технически более правильно выражать их четырехзначными числами. Почему? Потому что в дополнение к разрешениям на чтение, запись и выполнение существует еще несколько редко используемых разрешений.</p>

    <p class="Vrezka-body" xml:lang="ru-RU">Первый атрибут — бит <em>setuid</em> (восьмеричное значение 4000). Если это разрешение применяется к выполняемому файлу, в качестве <em>эффективного идентификатора пользователя</em> для процесса устанавливается не идентификатор реального пользователя (пользователя, фактически запустившего программу), а идентификатор владельца программы. Чаще этот бит устанавливается для программ, владельцем которых является суперпользователь. Когда обычный пользователь запускает программу с установленным битом <em>setuid</em> и принадлежащую пользователю <em>root</em>, программа выполняется с эффективными привилегиями суперпользователя. Это дает возможность программам обращаться к файлам и каталогам, недоступным для обычного пользователя. Очевидно, что из-за возникающих проблем безопасности число таких программ в системе должно быть сведено к минимуму.</p>

    <p class="Vrezka-body" xml:lang="ru-RU">Второй редко используемый атрибут — бит <em>setgid</em> (восьмеричное значение 2000). По аналогии с битом <em>setuid</em> он устанавливает <em>эффективный идентификатор группы</em> для процесса, выбирая вместо идентификатора группы реального пользователя группу владельца файла. Если установить бит <em>setgid</em> для каталога, вновь создаваемые файлы в этом каталоге будут принадлежать группе владельца каталога, а не группе владельца файла, создавшего его. Это разрешение может пригодиться для установки на каталоги, содержимое которых должно быть доступно всем членам основной группы владельца каталога, независимо от принадлежности к основной группе владельца файла.</p>

    <p class="Vrezka-body" xml:lang="ru-RU">Третий атрибут называется битом <em>sticky</em> (восьмеричное значение 1000). Это пережиток, оставшийся от первых версий Unix, которые предоставляли возможность пометить выполняемый файл как «невытесняемый». Linux игнорирует бит <em>sticky</em> у файлов, но если установить его для каталога, он не позволит пользователю удалять или переименовывать файлы, если только пользователь не является владельцем каталога, владельцем файла или суперпользователем. Это разрешение часто применяется для управления доступом к общим каталогам, таким как <em>/tmp</em>.</p>

    <p class="Vrezka-body" xml:lang="ru-RU">Ниже приводится несколько примеров использования <span class="command char-style-override-1">chmod</span> с символической формой определения этих специальных разрешений. Первый пример — установка бита <em>setuid</em> на файл программы:</p>

    <p class="vrezka-listing"><span class="command char-style-override-7">chmod u+s program</span></p>

    <p class="Vrezka-body" xml:lang="ru-RU">Далее — установка бита <em>setgid</em> на каталог:</p>

    <p class="vrezka-listing"><span class="command char-style-override-7">chmod g+s dir</span></p>

    <p class="Vrezka-body" xml:lang="ru-RU">Наконец, установка бита <em>sticky</em> на каталог:</p>

    <p class="vrezka-listing"><span class="command char-style-override-7">chmod +t</span><span class="command char-style-override-7"> dir</span></p>

    <p class="Vrezka-body" xml:lang="ru-RU">Специальные разрешения мы видим в выводе команды <span class="command char-style-override-1">ls</span>. Ниже приводится несколько примеров. Первый — программа с битом <em>setuid</em>:</p>

    <p class="vrezka-listing"><span class="command char-style-override-7">-rwsr-xr-x</span></p>

    <p class="Vrezka-body" xml:lang="ru-RU">Теперь — каталог с атрибутом <em>setgid</em>:</p>

    <p class="vrezka-listing"><span class="command char-style-override-7">drwxrwsr-x</span></p>

    <p class="Vrezka-body" xml:lang="ru-RU">Наконец, каталог с битом <em>sticky</em>:</p>

    <p class="vrezka-listing"><span class="command char-style-override-7">drwxrwxrwt</span></p>

    <p xml:lang="ru-RU">Вам редко придется изменять маску, потому что значение по умолчанию, устанавливаемое дистрибутивом, прекрасно подходит для большинства нужд. Однако в некоторых ситуациях, требующих повышенной безопасности, маску может понадобиться изменить.</p>

    <h2 id="toc_marker-12-3" xml:lang="ru-RU">Изменение идентичности</h2>

    <p class="Normal0" xml:lang="ru-RU">Время от времени возникает необходимость приобрести идентичность другого пользователя. Чаще всего требуется получить привилегии суперпользователя, чтобы выполнить некоторые административные задачи, но точно так же можно «превратить» в другого обычного пользователя, чтобы, к примеру, проверить настройки учетной записи. Существует три способа приобрести альтернативную идентичность:</p>

    <p class="ListBul" xml:lang="ru-RU">• выйти из системы и войти вновь с учетными данными другого пользователя;</p>

    <p class="ListBul" xml:lang="ru-RU">• воспользоваться командой <span class="command char-style-override-1">su</span>;</p>

    <p class="ListBulLast" xml:lang="ru-RU">• воспользоваться командой <span class="command char-style-override-1">sudo</span>.</p>

    <p xml:lang="ru-RU">Мы пропустим первый способ, потому что уже знаем, как им воспользоваться, и он не так удобен, как два других. В рамках сеанса работы с командной оболочкой команда <span class="command char-style-override-1">su</span> позволяет приобрести идентичность другого пользователя и либо начать новый сеанс командной оболочки с идентификатором этого пользователя, либо запустить одиночную команду от его имени. Команда <span class="command char-style-override-1">sudo</span> позволяет администратору записать настройки в конфигурационный файл с именем <em>/etc/sudoers</em> и определить конкретные команды, которые сможет выполнять тот или иной пользователь под приобретенной идентичностью. Выбор между <span class="command char-style-override-1">su</span> и <span class="command char-style-override-1">sudo</span> в значительной степени определяется используемым дистрибутивом Linux. Большинство дистрибутивов включают обе команды, но в настройках предпочтение отдается той или иной. Начнем с команды <span class="command char-style-override-1">su</span>.</p>

    <h3 xml:lang="ru-RU">su — запуск командной оболочки с подстановкой идентификаторов пользователя и группы</h3>

    <p class="Normal0" xml:lang="ru-RU">Команда <span class="command char-style-override-1">su</span> используется для запуска нового сеанса работы с командной оболочкой от имени другого пользователя. Команда имеет следующий синтаксис:</p>

    <p class="list-one">su [-[l]] [<em>пользователь</em>]</p>

    <p xml:lang="ru-RU">Если указан параметр <span class="command char-style-override-1">-l</span>, запущенная командная оболочка станет оболочкой входа для указанного пользователя. Это означает, что будет загружено окружение пользователя и текущим рабочим каталогом станет домашний каталог пользователя. Часто это именно то, что требуется. Если пользователь не указан, подразумевается суперпользователь. Обратите внимание, что (довольно необычно) параметр <span class="command char-style-override-1">-l</span> можно сократить до <span class="command char-style-override-1">-</span>, и эта особенность часто используется на практике. Запустить командную оболочку от имени суперпользователя можно следующим образом:</p>

    <p class="list-first">[me@linuxbox ~]$ <strong>su -</strong></p>

    <p class="listing-body">Password:</p>

    <p class="list-last">[root@linuxbox ~]#</p>

    <p xml:lang="ru-RU">После ввода команды будет запрошен пароль суперпользователя. После ввода правильного пароля появится новое приглашение к вводу, показывающее, что данная командная оболочка обладает привилегиями суперпользователя (символ <span class="command char-style-override-1">#</span> в конце вместо символа <span class="command char-style-override-1">$</span>) и текущим рабочим каталогом теперь стал домашний каталог суперпользователя (обычно <em>/root</em>). После запуска новой оболочки можно выполнять команды с привилегиями суперпользователя. Завершим работу, введя команду <span class="command char-style-override-1">exit</span>, чтобы вернуться в предыдущую командную оболочку:</p>

    <p class="list-first">[root@linuxbox ~]# <strong>exit</strong></p>

    <p class="list-last">[me@linuxbox ~]$</p>

    <p xml:lang="ru-RU">С помощью <span class="command char-style-override-1">su</span> можно так же просто выполнить единственную команду, не запуская новый интерактивный сеанс:</p>

    <p class="list-one">su -c '<em>команда</em>'</p>

    <p xml:lang="ru-RU">При использовании этой формы команде <span class="command char-style-override-1">su</span> передается единственная командная строка для выполнения. Не забудьте заключить команду в кавычки, чтобы предотвратить дополнительную ее интерпретацию механизмами подстановки текущей командной оболочки:</p>

    <p class="list-first">[me@linuxbox ~]$ <strong>su -c 'ls -l /root/*'</strong></p>

    <p class="listing-body">Пароль:</p>

    <p class="listing-body">-rw------- 1 root root&#160;&#160;&#160;&#160;&#160;754 2011-08-11 03:19 /root/anaconda-ks.cfg</p>

    <p class="listing-body">/root/Mail:</p>

    <p class="listing-body">итого 0</p>

    <p class="listing-body">[me@linuxbox ~]$</p>

    <h3 xml:lang="ru-RU">sudo — выполнение команды от имени другого пользователя</h3>

    <p class="Normal0" xml:lang="ru-RU">Команда <span class="command char-style-override-1">sudo</span> во многом подобна команде <span class="command char-style-override-1">su</span>, но имеет некоторые важные дополнительные особенности. Администратор может определить порядок использования <span class="command char-style-override-1">sudo</span> обычными пользователями, ограничив возможность запуска команд от имени другого пользователя (обычно суперпользователя). В частности, пользователю может быть разрешен доступ к одним командам и запрещен к другим. Еще одно важное отличие состоит в том, что <span class="command char-style-override-1">sudo</span> не требует ввода пароля суперпользователя. Для аутентификации в команде <span class="command char-style-override-1">sudo</span> пользователь должен ввести свой пароль. Например, допустим, что настройки <span class="command char-style-override-1">sudo</span> позволяют выполнить некоторую мифическую программу резервного копирования с именем <span class="command char-style-override-1">backup_script</span>, требующую привилегий суперпользователя.</p>

    <p xml:lang="ru-RU">С помощью <span class="command char-style-override-1">sudo</span> ее можно запустить так:</p>

    <p class="list-first">[me@linuxbox ~]$ <strong>sudo backup_script</strong></p>

    <p class="listing-body">Пароль:</p>

    <p class="list-last">System Backup Starting...</p>

    <p xml:lang="ru-RU">После ввода команды вам будет предложено ввести пароль (ваш, а не суперпользователя), и по завершении аутентификации указанная команда будет выполнена. Одно важное отличие между <span class="command char-style-override-1">su</span> и <span class="command char-style-override-1">sudo</span> — последняя не запускает новую командную оболочку и не загружает окружение другого пользователя. Это означает, что команды не требуется экранировать как-то иначе, чем при запуске той же команды без использования <span class="command char-style-override-1">sudo</span>. Имейте в виду, что такое ее поведение можно переопределить с помощью различных параметров. Подробности ищите на странице справочного руководства (<span class="command char-style-override-1">man</span>) для <span class="command char-style-override-1">sudo</span>.</p>

    <p class="Vrezka-head" xml:lang="ru-RU">ubuntu и sudo</p>

    <p class="Vrezka-body" xml:lang="ru-RU">Обычные пользователи иногда сталкиваются с необходимостью выполнить некоторую операцию, требующую привилегий суперпользователя. К числу таких операций относится установка и обновление программного обеспечения, правка системных конфигурационных файлов и доступ к устройствам. В мире Windows эта проблема часто решается передачей пользователям административных привилегий, что позволяет им решать подобные задачи. Однако программы, запускаемые такими пользователями, получают те же привилегии. В большинстве случаев это именно то, что нужно, но это также дает возможность беспрепятственной работы вредоносному программному обеспечению, такому как вирусы.</p>

    <p class="Vrezka-body" xml:lang="ru-RU">В мире Unix, вследствие многопользовательской природы этой операционной системы, всегда проводилась четкая грань между обычными пользователями и администраторами. Идеология Unix заключается в том, чтобы предоставлять привилегии суперпользователя, только когда они действительно необходимы. Для этого часто используются команды <span class="command char-style-override-1">su</span> и <span class="command char-style-override-1">sudo</span>.</p>

    <p class="Vrezka-body" xml:lang="ru-RU">Еще несколько лет тому назад большинство дистрибутивов Linux использовали с этой целью команду <span class="command char-style-override-1">su</span>. Команда <span class="command char-style-override-1">su</span> не требует настройки, как команда <span class="command char-style-override-1">sudo</span>, а наличие учетной записи <em>root</em> — давняя традиция в Unix. Вместе это порождает проблему. Пользователи могут испытывать соблазн действовать от имени root без всякой необходимости. Фактически некоторые пользователи вообще работают в своих системах, регистрируясь исключительно как root, чтобы избежать появления раздражающих сообщений «permission denied» (доступ запрещен). Такой подход ухудшает защищенность Linux, низводя ее до уровня Windows. Не самое лучшее решение.</p>

    <p class="Vrezka-body" xml:lang="ru-RU">Создатели Ubuntu предприняли иной подход. По умолчанию Ubuntu запрещает регистрироваться в системе с учетной записью root (не позволяя устанавливать пароль для этой учетной записи), а для получения привилегий суперпользователя предлагает использовать <span class="command char-style-override-1">sudo</span>. Начальная учетная запись пользователя обладает полным доступом к привилегиям суперпользователя через <span class="command char-style-override-1">sudo</span> и может наделять аналогичными привилегиями другие, вновь создаваемые учетные записи.</p>

    <p xml:lang="ru-RU">Чтобы увидеть, какие привилегии дает команда <span class="command char-style-override-1">sudo</span>, вызовите ее с параметром <span class="command char-style-override-1">-l</span>:</p>

    <p class="list-first">[me@linuxbox ~]$ <strong>sudo -l</strong></p>

    <p class="listing-body">User me may run the following commands on this host:</p>

    <p class="listing-body">&#160;&#160;&#160;&#160;(ALL) ALL</p>

    <h3 xml:lang="ru-RU">chown — изменение владельца и группы файла</h3>

    <p class="Normal0" xml:lang="ru-RU">Команда <span class="command char-style-override-1">chown</span> используется для изменения владельца и группы файла или каталога. Для использования этой команды необходимы привилегии суперпользователя. Команда <span class="command char-style-override-1">chown</span> имеет следующий синтаксис:</p>

    <p class="list-one">chown [<em>владелец</em>][:[<em>группа</em>]] <em>файл</em>...</p>

    <p xml:lang="ru-RU"><span class="command char-style-override-1">chown</span> может изменить владельца и/или группу файла в зависимости от первого аргумента. В табл. 9.7 приводится несколько примеров команды.</p>

    <p class="Tabl-head" xml:lang="ru-RU"><strong>Таблица 9.7.</strong> Примеры аргументов команды chown</p>

    <table id="table-33" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

</colgroup>

      <tbody>      <tr>      <td class="Cell-Style-2 cell-style-override-6">       <p class="Tabl-head" xml:lang="ru-RU">Аргумент</p>

</td>

      <td class="Cell-Style-2 cell-style-override-6">       <p class="Tabl-head" xml:lang="ru-RU">Результаты</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-6">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">bob</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-6">       <p class="Tabl-body" xml:lang="ru-RU">Изменит принадлежность файла, назначив владельцем пользователя <span class="command char-style-override-4">bob</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-6">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">bob:users</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-6">       <p class="Tabl-body" xml:lang="ru-RU">Изменит принадлежность файла, назначив владельцем пользователя <span class="command char-style-override-4">bob</span> и группу <span class="command char-style-override-4">users</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-6">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">:admins</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-6">       <p class="Tabl-body" xml:lang="ru-RU">Изменит принадлежность файла, назначив группу <span class="command char-style-override-4">admins</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-6">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">bob:</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-6">       <p class="Tabl-body" xml:lang="ru-RU">Изменит принадлежность файла, назначив владельцем пользователя<span class="command char-style-override-4"> bob</span> и группу этого пользователя</p>

</td>

</tr>

</tbody>
    </table>

    <p class="No-Paragraph-Style"></p>

    <p xml:lang="ru-RU">Представьте, что существуют два пользователя: <em>janet</em>, имеющий доступ к привилегиям суперпользователя, и <em>tony</em>, лишенный таких привилегий. Пользователю <em>janet</em> нужно скопировать файл из своего домашнего каталога в домашний каталог пользователя <em>tony</em>. Поскольку пользователь <em>janet</em> хочет, чтобы пользователь <em>tony</em> смог редактировать файл, <em>janet</em> должен изменить владельца скопированного файла, назначив владельцем <em>tony</em>:</p>

    <p class="list-first">[janet@linuxbox ~]$ <strong>sudo cp myfile.txt ~tony</strong></p>

    <p class="listing-body">Password:</p>

    <p class="listing-body">[janet@linuxbox ~]$ <strong>sudo ls -l ~tony/myfile.txt</strong></p>

    <p class="listing-body">-rw-r--r-- 1 root&#160;&#160;&#160;root&#160;&#160;8031 2012-03-20 14:30 /home/tony/myfile.txt</p>

    <p class="listing-body">[janet@linuxbox ~]$ <strong>sudo chown tony: ~tony/myfile.txt</strong></p>

    <p class="listing-body">[janet@linuxbox ~]$ <strong>sudo ls -l ~tony/myfile.txt</strong></p>

    <p class="list-last">-rw-r--r-- 1 tony&#160;&#160;&#160;tony&#160;&#160;8031 2012-03-20 14:30 /home/tony/myfile.txt</p>

    <p xml:lang="ru-RU">Здесь видно, как пользователь <em>janet</em> копирует файл из своего каталога в домашний каталог пользователя <em>tony</em>. Далее <em>janet</em> заменяет владельца файла <em>root</em> (результат использования <span class="command char-style-override-1">sudo</span>) на <em>tony</em>. Добавив двоеточие в конец первого аргумента, <em>janet</em> одновременно изменяет группу, которой принадлежит файл, на основную группу пользователя <em>tony</em>, которая, так уж получилось, носит то же имя <em>tony</em>.</p>

    <p xml:lang="ru-RU">Заметили ли вы, что после первого использования команда <span class="command char-style-override-1">sudo</span> не предложила пользователю <em>janet</em> вновь ввести пароль? Это объясняется тем, что в большинстве конфигураций <span class="command char-style-override-1">sudo</span> продолжает «доверять» пользователю в течение нескольких минут (пока не истечет время ее действия).</p>

    <h3 xml:lang="ru-RU">chgrp — изменение группы файла</h3>

    <p class="Normal0" xml:lang="ru-RU">В старых версиях Unix команда <span class="command char-style-override-1">chown</span> изменяла только владельца файла, но не группу. Чтобы изменить группу, предоставлялась другая команда, <span class="command char-style-override-1">chgrp</span>. Она действует практически так же, как <span class="command char-style-override-1">chown</span>, но имеет больше ограничений.</p>

    <h2 id="toc_marker-12-4" xml:lang="ru-RU">Использование привилегий</h2>

    <p class="Normal0" xml:lang="ru-RU">Теперь, когда мы разобрались, как действует механизм привилегий, самое время научиться пользоваться ими. Далее демонстрируется решение типичной задачи — настройка общего каталога. Представьте себе двух пользователей, <em>bill</em> и <em>karen</em>. Оба имеют коллекции музыкальных произведений и хотели бы настроить общий каталог, где могли бы хранить файлы в формате Ogg Vorbis или MP3. Пользователь <em>bill</em> имеет доступ к привилегиям суперпользователя через <span class="command char-style-override-1">sudo</span>.</p>

    <p xml:lang="ru-RU">Первое, что нужно сделать, — это создать группу, куда будут входить оба пользователя, <em>bill</em> и <em>karen</em>. С помощью графического инструмента GNOME для управления пользователями <em>bill</em> создает группу с именем <em>music</em> и добавляет в нее пользователей <em>bill</em> и <em>karen</em>, как показано на рис. 9.3.</p>

    <p class="Pic-yakor" xml:lang="ru-RU"><span></span>&#160;</p>

    <p class="Pic-nazv" xml:lang="ru-RU"><strong>Рис. 9.3.</strong> Создание новой группы в GNOME</p>

    <p xml:lang="ru-RU">Далее <em>bill</em> создает каталог для музыкальных файлов:</p>

    <p class="list-first">[bill@linuxbox ~]$ <strong>sudo mkdir /usr/local/share/Music</strong></p>

    <p class="list-last">Пароль:</p>

    <p xml:lang="ru-RU">Поскольку <em>bill</em> манипулирует файлами за пределами своего домашнего каталога, ему необходимы привилегии суперпользователя. После создания каталог получает следующие права доступа и владельца:</p>

    <p class="list-first">[bill@linuxbox ~]$ <strong>ls -ld /usr/</strong><strong>local/share/Music</strong></p>

    <p class="list-last">drwxr-xr-x 2 root root 4096 2012-03-21 18:05 /usr/local/share/Music</p>

    <p xml:lang="ru-RU">Как видите, каталогом владеет <em>root</em>, который имеет права доступа 755. Чтобы сделать каталог общим, <em>bill</em> должен изменить группу каталога и права доступа для группы:</p>

    <p class="list-first">[bill@linuxbox ~]$ <strong>sudo chown :music /usr/local/share/Music</strong></p>

    <p class="listing-body">[bill@linuxbox ~]$ <strong>sudo chmod 775 /usr/local/share/Music</strong></p>

    <p class="listing-body">[bill@linuxbox ~]$ <strong>ls -ld /usr/local/share/Music</strong></p>

    <p class="list-last">drwxrwxr-x 2 root music 4096 2012-03-21 18:05 /usr/local/share/Music</p>

    <p xml:lang="ru-RU">И что все это означает? А означает это следующее: владельцем каталога <em>/usr/local/share/Music</em> является <em>root</em>, и члены группы <em>music</em> получают права на запись и чтение в этом каталоге. Группа <em>music</em> включает пользователей <em>bill</em> и <em>karen</em>; то есть <em>bill</em> и <em>karen</em> могут создавать файлы в каталоге <em>/usr/local/share/Music</em>. Другие пользователи могут просматривать содержимое каталога, но не могут создавать файлы в нем.</p>

    <p xml:lang="ru-RU">Но остается нерешенной еще одна проблема. С текущими разрешениями файлы и каталоги внутри каталога <em>Music</em> будут создаваться с обычными разрешениями для пользователей <em>bill</em> и <em>karen</em>:</p>

    <p class="list-first">[bill@linuxbox ~]$ <strong>&gt; /usr/local/share/Music/test_file</strong></p>

    <p class="listing-body">[bill@linuxbox ~]$ <strong>ls -l /usr/local/share/Music</strong></p>

    <p class="list-last">-rw-r--r-- 1 bill&#160;&#160;&#160;bill&#160;&#160;&#160;0 2012-03-24 20:03 test_file</p>

    <p xml:lang="ru-RU">В действительности здесь наблюдаются две проблемы. Во-первых, маска <span class="command char-style-override-1">umask</span> в этой системе имеет значение 0022, что не позволяет членам группы записывать в файлы, принадлежащие другим членам группы. Это не проблема, если общий каталог хранит только файлы, но так как в данном каталоге предполагается хранить музыкальные произведения, а музыкальные произведения обычно принято организовывать в иерархии по исполнителям и альбомам, членам группы может понадобиться создавать файлы в каталогах, принадлежащих другим членам. Нам нужно изменить маску <span class="command char-style-override-1">umask</span> для пользователей <em>bill</em> и <em>karen</em> на 0002.</p>

    <p xml:lang="ru-RU">Во-вторых, каждый файл и каталог, созданный одним членом группы, будет принадлежать основной группе пользователя, а не группе <em>music</em>. Исправить этот недостаток можно установкой бита <em>setgid</em> на каталог:</p>

    <p class="list-first">[bill@linuxbox ~]$ <strong>sudo chmod g+s /usr/local/share/Music</strong></p>

    <p class="listing-body">[bill@linuxbox ~]$ <strong>ls -ld /usr/local/share/Music</strong></p>

    <p class="list-last">drwxrwsr-x 2 root music 4096 2012-03-24 20:03 /usr/local/share/Music</p>

    <p xml:lang="ru-RU">Теперь можно проверить, устранили ли проблему вновь добавленные разрешения. <em>bill</em> устанавливает маску <span class="command char-style-override-1">umask</span> в значение 0002, удаляет предыдущий проверочный файл и создает новый проверочный файл и каталог:</p>

    <p class="list-first">[bill@linuxbox ~]$ <strong>umask 0002</strong></p>

    <p class="listing-body">[bill@linuxbox ~]$ <strong>rm /usr/local/share/Music/test_file</strong></p>

    <p class="listing-body">[bill@linuxbox ~]$ <strong>&gt; /usr/local/share/Music/test_file</strong></p>

    <p class="listing-body">[bill@linuxbox ~]$ <strong>mkdir /usr/local/share/Music/test_dir</strong></p>

    <p class="listing-body">[bill@linuxbox ~]$ <strong>ls -l /usr/local/share/Music</strong></p>

    <p class="listing-body">drwxrwsr-x 2 bill&#160;&#160;&#160;music 4096 2012-03-24 20:24 test_dir</p>

    <p class="listing-body">-rw-rw-r-- 1 bill&#160;&#160;&#160;music 0 2012-03-24 20:22 test_file</p>

    <p class="list-last">[bill@linuxbox ~]$</p>

    <p xml:lang="ru-RU">И файл и каталог теперь созданы с правильными правами доступа, позволяющими всем членам группы <em>music</em> создавать файлы и каталоги внутри каталога <em>Music</em>.</p>

    <p xml:lang="ru-RU">Осталась только проблема с маской <span class="command char-style-override-1">umask</span>. Дело в том, что установленная маска действует лишь до конца сеанса и сбрасывается по его завершении. В главе 11 мы узнаем, как сохранить действие измененной маски <span class="command char-style-override-1">umask</span> между сеансами.</p>

    <h2 id="toc_marker-12-5" xml:lang="ru-RU">Изменение своего пароля</h2>

    <p class="Normal0" xml:lang="ru-RU">Последняя тема этой главы: изменение собственного пароля (и паролей других пользователей при наличии привилегий суперпользователя). Для установки и изменения пароля используется команда <span class="command char-style-override-1">passwd</span>. Она имеет следующий синтаксис:</p>

    <p class="list-one">passwd [<em>пользователь</em>]</p>

    <p xml:lang="ru-RU">Чтобы изменить свой пароль, просто введите команду <span class="command char-style-override-1">passwd</span>. Вам будет предложено ввести старый, а затем новый пароль:</p>

    <p class="list-first">[me@linuxbox ~]$ <strong>passwd</strong></p>

    <p class="listing-body">Смена пароля для me.</p>

    <p class="listing-body">(текущий) пароль UNIX:</p>

    <p class="list-last">Введите новый пароль UNIX:</p>

    <p xml:lang="ru-RU">Команда пытается вынудить пользователей вводить «сильные» пароли. Это означает, что она будет отвергать слишком короткие пароли, слишком похожие на предыдущие пароли, пароли, являющиеся словарными словами или легко угадываемые:</p>

    <p class="list-first">[me@linuxbox ~]$ <strong>passwd</strong></p>

    <p class="listing-body">Смена пароля для me.</p>

    <p class="listing-body">(текущий) пароль UNIX: :</p>

    <p class="listing-body">Введите новый пароль UNIX:</p>

    <p class="listing-body">BAD PASSWORD: is too similar to the old one</p>

    <p class="listing-body">Введите новый пароль UNIX:</p>

    <p class="listing-body">Выберите пароль большей длины</p>

    <p class="listing-body">Введите новый пароль UNIX :</p>

    <p class="list-last">BAD PASSWORD: it is based on a dictionary word</p>

    <p xml:lang="ru-RU">При наличии привилегий суперпользователя можно передать команде <span class="command char-style-override-1">passwd</span> аргумент с именем пользователя, чтобы установить пароль для этого пользователя. Суперпользователю доступна также возможность блокировки учетных записей, установки времени действия пароля и многое другое. За подробностями обращайтесь к странице справочного руководства (<span class="command char-style-override-1">man</span>) для команды <span class="command char-style-override-1">passwd</span>.</p>
  </div>
</body>
</html>