<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Командная строка Linux</title>
  <link href="../Styles/template.css" rel="stylesheet" type="text/css"/>
</head>

<body id="x978549602303" xml:lang="en-US">
  <div class="Basic-Text-Frame">
     <h1 id="toc_marker-7" xml:lang="ru-RU">4. Операции с файлами и каталогами</h1>

    <p class="Normal0" xml:lang="ru-RU">Теперь мы готовы приступить к настоящей работе! В этой главе будут представлены следующие команды:</p>

    <p class="ListBul" xml:lang="ru-RU"><span class="command char-style-override-1">• cp</span> — копирует файлы и каталоги.</p>

    <p class="ListBul" xml:lang="ru-RU"><span class="command char-style-override-1">• mv</span> — перемещает/переименовывает файлы и каталоги.</p>

    <p class="ListBul" xml:lang="ru-RU"><span class="command char-style-override-1">• mkdir</span> — создает каталоги.</p>

    <p class="ListBul" xml:lang="ru-RU"><span class="command char-style-override-1">• rm</span> — удаляет файлы и каталоги.</p>

    <p class="ListBul" xml:lang="ru-RU"><span class="command char-style-override-1">• ln</span> — создает жесткие и символические ссылки.</p>

    <p xml:lang="ru-RU">Эти пять команд относятся к числу наиболее часто используемых в Linux. Они применяются для управления файлами и каталогами.</p>

    <p xml:lang="ru-RU">Справедливости ради следует заметить, что некоторые задачи, выполняемые этими командами, гораздо проще решаются с помощью графического диспетчера файлов. В диспетчере файлов можно мышью перетаскивать файлы из одного каталога в другой, вырезать и вставлять файлы, удалять файлы и т.д. Но зачем тогда использовать эти старые программы командной строки?</p>

    <p xml:lang="ru-RU">Ответ прост: потому что они обладают мощностью и гибкостью. Несмотря на то что простые операции с файлами легко выполняются в диспетчере файлов с графическим интерфейсом, сложные задачи проще решать с помощью программ командной строки. Например, как скопировать файлы HTML из одного каталога в другой, причем только те, что отсутствуют в каталоге назначения или имеют более позднюю дату последнего изменения? Сделать это в диспетчере файлов очень сложно, но легко в командной строке:</p>

    <p class="list-first">cp -u *.html destination</p>

    <h2 id="toc_marker-7-1" xml:lang="ru-RU">Групповые символы</h2>

    <p class="Normal0" xml:lang="ru-RU">Прежде чем приступать к использованию обсуждаемых команд, необходимо сначала поговорить об одной особенности командной оболочки, которая делает эти команды такими мощными. Так как имена файлов используются в командной оболочке повсеместно, она поддерживает специальные символы, помогающие быстро определять группы имен файлов. Эти специальные символы называют <em>групповыми символами</em> (wildcards). Групповые символы (также известны как <em>символы подстановки</em> (globbing)) позволяют выбирать имена файлов по шаблону. В табл. 4.1 перечислены групповые символы и их соответствия.</p>

    <p class="Tabl-head" xml:lang="ru-RU"><strong>Таблица 4.1.</strong> Групповые символы</p>

    <table id="table-6" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

</colgroup>

      <tbody>      <tr>      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Групповой символ</p>

</td>

      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Соответствует</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">*</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Любая последовательность любых символов</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">?</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Любой один символ</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">[</span><em>символы</em><span class="command char-style-override-4">]</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Любой один символ из указанного множества <em>символов</em></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">[!</span><em>символы</em><span class="command char-style-override-4">]</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Любой один символ, не принадлежащий указанному множеству <em>символов</em></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">[[:</span><em>класс</em><span class="command char-style-override-4">:]]</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Любой один символ, принадлежащий указанному <em>классу</em></p>

</td>

</tr>

</tbody>
    </table>

    <p class="No-Paragraph-Style"></p>

    <p xml:lang="ru-RU">В табл. 4.2 представлены наиболее часто используемые классы символов.</p>

    <p class="Tabl-head" xml:lang="ru-RU"><strong>Таблица 4.2.</strong> Наиболее часто используемые классы символов</p>

    <table id="table-7" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

</colgroup>

      <tbody>      <tr>      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Класс символов</p>

</td>

      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Соответствует</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">[:alnum:]</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Любой алфавитно-цифровой символ</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">[:alpha:]</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Любой алфавитный символ</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">[:digit:]</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Любой цифровой символ</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">[:lower:]</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Любая буква в нижнем регистре</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">[:upper:]</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Любая буква в верхнем регистре</p>

</td>

</tr>

</tbody>
    </table>

    <p class="No-Paragraph-Style"></p>

    <p class="Vrezka-head" xml:lang="ru-RU">диапазоны символов</p>

    <p class="Vrezka-body" xml:lang="ru-RU">Если у вас уже есть опыт работы с другим Unix-подобным окружением или вам приходилось читать другие книги по этой теме, вы встречали форму записи диапазонов символов <span class="command char-style-override-1">[A-Z]</span> или <span class="command char-style-override-1">[a-z]</span>. Это традиционные для Unix формы записи, и они прекрасно работают в старых версиях Linux. Более того, они все еще работают в новых версиях, но будьте очень осторожны при их использовании, потому что они не всегда дают ожидаемый результат без правильной настройки. А вообще, старайтесь избегать их и использовать классы символов.</p>

    <p xml:lang="ru-RU">Групповые символы позволяют конструировать сложные критерии выбора имен файлов. В табл. 4.3 перечислены некоторые примеры шаблонов и их соответствия.</p>

    <p class="Tabl-head" xml:lang="ru-RU"><strong>Таблица 4.3.</strong> Примеры использования групповых символов</p>

    <table id="table-8" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

</colgroup>

      <tbody>      <tr>      <td class="Cell-Style-2 cell-style-override-3">       <p class="Tabl-head" xml:lang="ru-RU">Шаблон</p>

</td>

      <td class="Cell-Style-2 cell-style-override-3">       <p class="Tabl-head" xml:lang="ru-RU">Соответствует</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-4">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">*</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU">Все имена файлов</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-4">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">g*</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU">Все имена файлов, начинающиеся с символа «<em>g</em>»</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-4">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">b*.txt</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU">Все имена файлов, начинающиеся с символа «<em>b</em>», за которым следует любое число других символов, и заканчивающиеся на «<em>.txt</em>»</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-4">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">Data???</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU">Все имена файлов, начинающиеся с символов «<em>Data</em>», за которыми следуют ровно три любых символа</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-4">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">[abc]*</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU"><span>Все имена файлов, начинающиеся с символа «</span><em>a</em><span>», «</span><em>b</em><span>» или «</span><em>c</em><span>»</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-4">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">BACKUP.[0-9][0-9][0-9]</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU">Все имена файлов, начинающиеся с символов «<em>BACKUP.</em>», за которыми следуют ровно три цифровых символа</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-4">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">[[:upper:]]*</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU">Все имена файлов, начинающиеся с буквы в верхнем регистре</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-4">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">[![:digit:]]*</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU">Все имена файлов, не начинающиеся с цифры</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1 cell-style-override-4">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">*[[:lower:]123]</span></p>

</td>

      <td class="Cell-Style-1 cell-style-override-3">       <p class="Tabl-body" xml:lang="ru-RU">Все имена файлов, заканчивающиеся буквой в нижнем регистре или цифрой «<em>1</em>», «<em>2</em>» или «<em>3</em>»</p>

</td>

</tr>

</tbody>
    </table>

    <p class="No-Paragraph-Style"></p>

    <p xml:lang="ru-RU">Групповые символы можно использовать с любыми командами, принимающими имена файлов в виде аргументов, но подробнее об этом мы поговорим в главе 7.</p>

    <p class="Vrezka-head" xml:lang="ru-RU">групповые символы также действуют в графическом интерфейсе</p>

    <p class="Vrezka-body" xml:lang="ru-RU">Групповые символы имеют особую ценность не только потому, что часто используются в командной строке, но и потому, что поддерживаются некоторыми диспетчерами с графическим интерфейсом.</p>

    <p class="Vrezka-ListBul" xml:lang="ru-RU">• В <span class="interface char-style-override-2">Nautilus</span> (диспетчер файлов для GNOME) можно выбирать файлы с помощью диалога <span class="interface char-style-override-2">Edit</span> (Правка) —&gt; <span class="interface char-style-override-2">Select Pattern</span> (Выделить по шаблону). Просто введите шаблон для выбора файлов с групповыми символами, и в текущем каталоге будут выделены файлы, соответствующие шаблону.</p>

    <p class="Vrezka-ListBul" xml:lang="ru-RU">• В некоторых версиях <span class="interface char-style-override-2">Dolphin</span> и <span class="interface char-style-override-2">Konqueror</span> (диспетчеры файлов для KDE) групповые символы можно вводить непосредственно в адресную строку. Например, если понадобится увидеть все файлы с именами, начинающимися с буквы «<em>u</em>» в нижнем регистре, в каталоге <em>/usr/bin</em>, просто введите в адресной строке текст: <strong>/usr/bin/u*</strong>, и вы получите желаемый результат.</p>

    <p class="Vrezka-body-Last" xml:lang="ru-RU">Большинство идей, первоначально реализованных в интерфейсе командной строки, перекочевали и в графический интерфейс. Это одно из множества обстоятельств, которые делают настольный компьютер с Linux таким мощным инструментом.</p>

    <h2 id="toc_marker-7-2" xml:lang="ru-RU">mkdir — создание каталогов</h2>

    <p class="Normal0" xml:lang="ru-RU">Команда <span class="command char-style-override-1">mkdir</span> используется для создания каталогов. Вызывается она следующим образом:</p>

    <p class="list-one">mkdir <em>каталог</em>...</p>

    <p xml:lang="ru-RU"><strong>Примечание к форме записи:</strong> В этой книге три точки в описании команды, следующие за аргументом (как в примере выше), говорят о том, что аргументов может быть несколько; то есть в данном случае команда</p>

    <p class="list-one">mkdir dir1</p>

    <p xml:lang="ru-RU">создаст один каталог с именем <em>dir1</em>, а команда</p>

    <p class="list-one">mkdir dir1 dir2 dir3</p>

    <p xml:lang="ru-RU">создаст три каталога с именами <em>dir1</em>, <em>dir2</em> и <em>dir</em><em>3</em>.</p>

    <h2 id="toc_marker-7-3" xml:lang="ru-RU">cp — копирование файлов и каталогов</h2>

    <p class="Normal0" xml:lang="ru-RU">Команда <span class="command char-style-override-1">cp</span> копирует файлы и каталоги. Ее можно использовать двумя разными способами:</p>

    <p class="list-one">cp item1 item2</p>

    <p xml:lang="ru-RU">чтобы скопировать один файл или каталог <em>item1</em> в файл или каталог <em>item2</em>, и</p>

    <p class="list-one">cp <em>элемент</em>... <em>каталог</em></p>

    <p xml:lang="ru-RU">чтобы скопировать несколько элементов (файлов или каталогов) в указанный каталог.</p>

    <p xml:lang="ru-RU">В табл. 4.4 и 4.5 перечислены некоторые параметры (короткие и эквивалентные им длинные), наиболее часто используемые с командой <span class="command char-style-override-1">cp</span>.</p>

    <p class="Tabl-head" xml:lang="ru-RU"><strong>Таблица 4.4.</strong> Параметры команды cp</p>

    <table id="table-9" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

</colgroup>

      <thead>      <tr>      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Параметр</p>

</td>

      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Значение</p>

</td>

</tr>

</thead>

      <tbody>      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-a, --archive</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Скопировать файлы и каталоги со всеми атрибутами, включая идентификаторы владельцев и права доступа. Без этого параметра копии обычно получают значения атрибутов по умолчанию, определенных для пользователя, выполняющего копирование</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-i, --interactive</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Запрашивать у пользователя подтверждение перед пере­записью существующего файла. <strong>Если этот параметр отсут-</strong><strong class="char-style-override-6"></strong></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">&#160;</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><strong>ствует, команда </strong><span class="command char-style-override-4">cp</span><strong> просто перезапишет существующие файлы</strong></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-r, --recursive</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span>Рекурсивно копировать каталоги и их содержимое. Это обязательный параметр (или параметр </span><span class="command char-style-override-4">-a</span><span>) при копировании каталогов</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-u, --update</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">При копировании файлов из одного каталога в другой копировать только файлы, отсутствующие в каталоге назначения или более новые</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-v, --verbose</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Выводить информационные сообщения в процессе копиро-<br/>

 вания</p>

</td>

</tr>

</tbody>
    </table>

    <p class="No-Paragraph-Style"></p>

    <p class="Tabl-head" xml:lang="ru-RU"><strong>Таблица 4.5.</strong> Примеры использования команды cp</p>

    <table id="table-10" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

</colgroup>

      <tbody>      <tr>      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Команда</p>

</td>

      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Результат</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">cp file1 file2</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Скопирует <em>file1</em> в <em>file2</em>. Если <em>file2</em> существует, он будет затерт новым файлом <em>file</em><em>1</em>. Если <em>file2</em> отсутствует, он будет создан</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">cp -i file1 file2</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">То же, что и выше, но если файл <em>file2</em> существует, у пользователя будет запрошено подтверждение перед перезаписью файла</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">cp file1 file2 dir1</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Скопирует <em>file1</em> и <em>file2</em> в каталог <em>dir1</em>. Каталог <em>dir1</em> должен существовать</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">cp dir1/* dir2</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">С использованием группового символа. Скопирует все файлы из каталога <em>dir1</em> в каталог <em>dir2</em>. Каталог <em>dir2</em> должен существовать</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">cp -r dir1 dir2</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Скопирует каталог <em>dir1</em> (и все его содержимое) в каталог <em>dir2</em>. Если каталог <em>dir2</em> не существует, он будет создан и заполнен содержимым каталога <em>dir1</em></p>

</td>

</tr>

</tbody>
    </table>

    <p class="No-Paragraph-Style"></p>

    <h2 id="toc_marker-7-4" xml:lang="ru-RU">mv — перемещение и переименование файлов</h2>

    <p class="Normal0" xml:lang="ru-RU">Команда <span class="command char-style-override-1">mv</span> выполняет операции перемещения и переименования файлов в зависимости от особенностей использования. В любом случае исходный файл исчезает после операции. Команда <span class="command char-style-override-1">mv</span> используется почти так же, как команда <span class="command char-style-override-1">cp</span>:</p>

    <p class="list-one">mv item1 item2</p>

    <p xml:lang="ru-RU">перемещает или переименовывает файл или каталог <em>item1</em> в <em>item2</em>.</p>

    <p class="list-one">mv <em>элемент</em>... <em>каталог</em></p>

    <p xml:lang="ru-RU">перемещает один или более элементов из одного каталога в другой.</p>

    <p xml:lang="ru-RU">Команда <span class="command char-style-override-1">mv</span> поддерживает множество тех же параметров, что и команда <span class="command char-style-override-1">cp</span>, как показано в табл. 4.6 и 4.7.</p>

    <p class="Tabl-head" xml:lang="ru-RU"><strong>Таблица 4.6.</strong> Параметры команды mv</p>

    <table id="table-11" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

</colgroup>

      <thead>      <tr>      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Параметр</p>

</td>

      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Значение</p>

</td>

</tr>

</thead>

      <tbody>      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-i, --interactive</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Запрашивать у пользователя подтверждение перед перезаписью существующего файла. <strong>Если этот параметр отсутствует, ­команда </strong><span class="command char-style-override-4">mv</span><strong> просто перезапишет существующие файлы</strong></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-u, --update</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">При перемещении файлов из одного каталога в другой перемещать только файлы, отсутствующие в каталоге назначения или более новые</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-v, --verbose</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Выводить информационные сообщения в процессе перемещения</p>

</td>

</tr>

</tbody>
    </table>

    <p class="No-Paragraph-Style"></p>

    <p class="Tabl-head" xml:lang="ru-RU"><strong>Таблица 4.7.</strong> Примеры использования команды mv</p>

    <table id="table-12" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

</colgroup>

      <tbody>      <tr>      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Команда</p>

</td>

      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Результат</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">mv file1 file2</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Переместит <em>file1</em> в <em>file2</em>. <strong>Если </strong><em>file2</em><strong> существует, он будет заменен на новый файл </strong><em>file1</em>. Если <em>file2</em> отсутствует, он будет создан. <strong>В любом случае появится новый файл </strong><em>file2</em></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">mv -i file1 file2</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">То же, что и выше, но если файл <em>file2</em> существует, у пользователя будет запрошено подтверждение перед перезаписью файла</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">mv file1 file2 dir1</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Переместит <em>file1</em> и <em>file2</em> в каталог <em>dir1</em>. Каталог <em>dir1</em> должен существовать</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">mv dir1 dir2</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Переместит каталог <em>dir1</em> (и все его содержимое) в каталог <em>dir2</em>. Если каталог <em>dir2</em> не существует, он будет создан и заполнен содержимым каталога <em>dir1</em>. Каталог <em>dir1</em> будет удален</p>

</td>

</tr>

</tbody>
    </table>

    <p class="No-Paragraph-Style"></p>

    <h2 id="toc_marker-7-5" xml:lang="ru-RU">rm — удаление файлов и каталогов</h2>

    <p class="Normal0" xml:lang="ru-RU">Команда <span class="command char-style-override-1">rm</span> используется для удаления (remove) файлов и каталогов, например:</p>

    <p class="list-one">rm <em>элемент</em>...</p>

    <p xml:lang="ru-RU">где <em>элемент</em> — это один или несколько файлов или каталогов.</p>

    <p xml:lang="ru-RU">В табл. 4.8 и 4.9 перечислены некоторые параметры, наиболее часто используемые с командой <span class="command char-style-override-1">rm</span>.</p>

    <p class="Tabl-head" xml:lang="ru-RU"><strong>Таблица 4.8.</strong> Параметры команды rm</p>

    <table id="table-13" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

</colgroup>

      <thead>      <tr>      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Параметр</p>

</td>

      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Значение</p>

</td>

</tr>

</thead>

      <tbody>      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-i, --interactive</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Запрашивать у пользователя подтверждение перед удалением существующего файла. <strong>Если этот параметр отсутствует, ­команда </strong><span class="command char-style-override-4">rm</span><strong> просто удалит существующие файлы</strong></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-r, --recursive</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Рекурсивно удалить каталоги. То есть вместе с каталогом будут удалены все его подкаталоги. Это обязательный параметр при удалении каталогов</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-f, --force</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Игнорировать отсутствующие файлы и не запрашивать подтверждения. Этот параметр отменяет действие параметра <span class="command char-style-override-4">--interactive</span></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">-v, --verbose</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Выводить информационные сообщения в процессе удаления</p>

</td>

</tr>

</tbody>
    </table>

    <p></p>

    <p class="Vrezka-head" xml:lang="ru-RU">будьте осторожны с командой rm!</p>

    <p class="Vrezka-body" xml:lang="ru-RU">Unix-подобные операционные системы, такие как Linux, не имеют команды, отменяющей удаление. Если вы что-то удалили командой <span class="command char-style-override-1">rm</span>, это исчезнет навсегда. Linux считает вас достаточно ответственным человеком, отдающим себе отчет в своих действиях.</p>

    <p class="Vrezka-body" xml:lang="ru-RU">Будьте особенно осторожны с групповыми символами. Рассмотрим следующий классический пример. Допустим, вы захотели удалить все файлы HTML в каталоге. Для этого вы вводите команду:</p>

    <p class="vrezka-listing"><span class="command char-style-override-7">rm *.html</span></p>

    <p class="Vrezka-body" xml:lang="ru-RU">которая сделает именно то, что вам нужно, но если вы случайно вставите пробел между <span class="command char-style-override-1">*</span> и <span class="command char-style-override-1">.html</span>, как в следующей команде:</p>

    <p class="vrezka-listing"><span class="command char-style-override-7">rm * .</span><span class="command char-style-override-7">html</span></p>

    <p class="Vrezka-body" xml:lang="ru-RU"><span class="command char-style-override-1">rm</span> удалит все файлы в каталоге и затем сообщит, что не нашла файла <em>.html</em>.</p>

    <p class="Vrezka-body-Last" xml:lang="ru-RU"><strong>Полезный совет:</strong> всякий раз, используя групповые символы с командой <span class="command char-style-override-1">rm</span> (помимо внимательной проверки ввода!), проверьте сначала аргумент с групповым символом с командой <span class="command char-style-override-1">ls</span>. Это позволит увидеть, какие файлы будут удалены. Затем нажмите клавишу со стрелкой вверх, чтобы восстановить команду из истории, и замените <span class="command char-style-override-1">ls</span> на <span class="command char-style-override-1">rm</span>.</p>

    <p class="Tabl-head" xml:lang="ru-RU"><strong>Таблица 4.9.</strong> Примеры использования команды rm</p>

    <table id="table-14" class="Table-Style-1">
      <colgroup>      <col/>

      <col/>

</colgroup>

      <tbody>      <tr>      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Команда</p>

</td>

      <td class="Cell-Style-2">       <p class="Tabl-head" xml:lang="ru-RU">Результат</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">rm file1</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Просто удалит файл <em>file1</em></p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">rm -i file1</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Перед удалением <em>file1</em> запросит подтверждение у пользователя</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">rm -r file1 dir1</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">Удалит файл <em>file1</em> и каталог <em>dir1</em> со всем его содержимым</p>

</td>

</tr>

      <tr>      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU"><span class="command char-style-override-4">rm -rf file1 dir1</span></p>

</td>

      <td class="Cell-Style-1">       <p class="Tabl-body" xml:lang="ru-RU">То же, что и выше, но в отсутствие <em>file1</em> и/или <em>dir1</em> просто продолжит работу, не выводя никаких сообщений</p>

</td>

</tr>

</tbody>
    </table>

    <p class="No-Paragraph-Style"></p>

    <h2 id="toc_marker-7-6" xml:lang="ru-RU">ln — создание ссылок</h2>

    <p class="Normal0" xml:lang="ru-RU">Команда <span class="command char-style-override-1">ln</span> применяется для создания жесткой или символической ссылки. Ее можно использовать одним из двух способов:</p>

    <p class="list-one">ln <em>файл</em> <em>ссылка</em></p>

    <p xml:lang="ru-RU">создает жесткую ссылку.</p>

    <p class="list-one">ln -s <em>элемент</em> <em>ссылка</em></p>

    <p xml:lang="ru-RU">создает символическую ссылку, где <em>элементом</em> может быть файл или каталог.</p>

    <h3 xml:lang="ru-RU">Жесткие ссылки</h3>

    <p class="Normal0" xml:lang="ru-RU">Жесткие ссылки — это первоначальный способ создания ссылок в Unix; символические ссылки — более позднее изобретение. По умолчанию каждый файл имеет одну жесткую ссылку, определяющую его имя. Создавая жесткую ссылку, мы создаем дополнительную запись в каталоге для файла. Жесткие ссылки имеют два важных ограничения.</p>

    <p class="ListBul" xml:lang="ru-RU">• Жесткая ссылка не может указывать на файл за пределами собственной файловой системы. Это означает, что ссылка не может указывать на файл, находящийся в другом разделе диска.</p>

    <p class="ListBulLast" xml:lang="ru-RU">• Жесткая ссылка не может указывать на каталог.</p>

    <p xml:lang="ru-RU">Жесткая ссылка неотличима от самого файла. В отличие от символических ссылок, при выводе списка с содержимым каталогов жесткие ссылки никак не выделяются. При удалении жесткой ссылки удаляется только сама ссылка, а файл остается на месте (то есть пространство, занимаемое файлом, не освобождается), пока не будут удалены все жесткие ссылки на файл.</p>

    <p xml:lang="ru-RU">Знать о существовании жестких ссылок важно, потому что они будут встречаться вам время от времени, но в современной практике предпочтение отдается символическим ссылкам, о которых рассказывается далее.</p>

    <h3 xml:lang="ru-RU">Символические ссылки</h3>

    <p class="Normal0" xml:lang="ru-RU">Символические ссылки были придуманы с целью преодолеть ограничения жестких ссылок. Когда создается символическая ссылка, в действительности создается файл особого типа, содержащий текстовый указатель на файл или каталог. В некотором отношении они действуют подобно ярлыкам в Windows, но, конечно же, появились задолго до ярлыков Windows. ;-)</p>

    <p xml:lang="ru-RU">Файл, на который указывает символическая ссылка, и сама символическая ссылка почти неотличимы друг от друга. Например, если попытаться что-то записать в символическую ссылку, запись будет выполнена в файл, на который она указывает. Однако при удалении символической ссылки удаляется только символическая ссылка, но не файл. Если удалить файл до того, как будет удалена символическая ссылка, ссылка останется на месте, но будет указывать в никуда. О таких ссылках говорят, что они «битые». Во многих реализациях команда <span class="command char-style-override-1">ls</span> выделяет битые ссылки цветом, например, красным, чтобы обратить на них внимание.</p>

    <p xml:lang="ru-RU">Идея ссылок может показаться странной и непонятной, но оставьте ее пока. Мы опробуем их на практике, и многое, возможно, для вас прояснится.</p>

    <h2 id="toc_marker-7-7" xml:lang="ru-RU">Давайте построим песочницу</h2>

    <p class="Normal0" xml:lang="ru-RU">Поскольку мы собираемся на практике опробовать некоторые операции с файлами, давайте выделим безопасный уголок для «игр» с командами управления файлами. Прежде всего нам понадобится каталог, в котором мы будем практиковаться. Создайте такой каталог в своем домашнем каталоге и назовите его <em>playground</em>.</p>

    <h3 xml:lang="ru-RU">Создание каталогов</h3>

    <p class="Normal0" xml:lang="ru-RU">Для создания каталогов используется команда <span class="command char-style-override-1">mkdir</span>. Чтобы создать каталог <em>play­ground</em>, проверьте сначала, находитесь ли вы в домашнем каталоге, и только потом создайте новый каталог:</p>

    <p class="list-first">[me@linuxbox ~]$ <strong>cd</strong></p>

    <p class="list-last">[me@linuxbox ~]$ <strong>mkdir playground</strong></p>

    <p xml:lang="ru-RU">Чтобы немножко украсить вашу песочницу, создайте внутри <em>playground</em> пару каталогов с именами <em>dir1</em> и <em>dir2</em>. Для этого смените текущий рабочий каталог на <em>playground</em> и выполните еще одну команду <span class="command char-style-override-1">mkdir</span>:</p>

    <p class="list-first">[me@linuxbox ~]$ <strong>cd playground</strong></p>

    <p class="list-last">[me@linuxbox playground]$ <strong>mkdir dir1 dir2</strong></p>

    <p xml:lang="ru-RU">Обратите внимание, что команда <span class="command char-style-override-1">mkdir</span> может принимать несколько аргументов, это позволяет создать два каталога одной командой.</p>

    <h3 xml:lang="ru-RU">Копирование файлов</h3>

    <p class="Normal0" xml:lang="ru-RU">Далее, добавим немного данных в нашу песочницу. Для этого скопируем какие-нибудь файлы. Командой <span class="command char-style-override-1">cp</span> скопируйте файл <em>passwd</em> из каталога <em>/etc</em> в текущий рабочий каталог.</p>

    <p class="list-one">[me@linuxbox playground]$ <strong>cp /etc/passwd .</strong></p>

    <p xml:lang="ru-RU">Обратите внимание на сокращение, обозначающее текущий рабочий каталог, — точку в конце команды. Если после этого выполнить команду <span class="command char-style-override-1">ls</span>, мы увидим наш файл:</p>

    <p class="list-first">[me@linuxbox playground]$ <strong>ls -l</strong></p>

    <p class="listing-body">итого 12</p>

    <p class="listing-body">drwxrwxr-x 2 me&#160;&#160;me 4096 2012-01-10 16:40 dir1</p>

    <p class="listing-body">drwxrwxr-x 2 me&#160;&#160;me 4096 2012-01-10 16:40 dir2</p>

    <p class="list-last">-rw-r--r-- 1 me&#160;&#160;me 1650 2012-01-10 16:07 passwd</p>

    <p xml:lang="ru-RU">Теперь ради развлечения повторите операцию копирования, но на этот раз с параметром <span class="command char-style-override-1">-v</span>, чтобы посмотреть, как она работает:</p>

    <p class="list-first">[me@linuxbox playground]$ <strong>cp -v /etc/passwd .</strong></p>

    <p class="list-last">`/etc/passwd' -&gt; `./passwd'</p>

    <p xml:lang="ru-RU">Команда <span class="command char-style-override-1">cp</span> вновь скопировала файл, но на этот раз вывела короткое сообщение, указывающее, что операция была выполнена. Обратите внимание, что <span class="command char-style-override-1">cp</span> перезаписала первую копию без каких-либо предупреждений. Это как раз тот случай, когда <span class="command char-style-override-1">cp</span> полагает, что вы знаете, что делаете. Чтобы вывести предупреждение, включите параметр <span class="command char-style-override-1">-i</span>:</p>

    <p class="list-first">[me@linuxbox playground]$ <strong>cp -i /etc/passwd .</strong></p>

    <p class="list-last">cp: переписать `./passwd'?</p>

    <p xml:lang="ru-RU">Если в ответ на запрос ввести <span class="command char-style-override-1">y</span>, команда перезапишет существующий файл; если ввести любой другой символ (например, <span class="command char-style-override-1">n</span>), <span class="command char-style-override-1">cp</span> оставит прежнюю копию файла нетронутой.</p>

    <h3 xml:lang="ru-RU">Перемещение и переименование файлов</h3>

    <p class="Normal0" xml:lang="ru-RU">Имя <em>passwd</em> не выглядит органичным в нашей песочнице, поэтому дадим этому файлу какое-нибудь другое имя:</p>

    <p class="list-one">[me@linuxbox playground]$ <strong>mv passwd fun</strong></p>

    <p xml:lang="ru-RU">Теперь немножко позабавимся и переместим переименованный файл в каждый из каталогов и обратно:</p>

    <p class="list-one">[me@linuxbox playground]$ <strong>mv fun dir1</strong></p>

    <p xml:lang="ru-RU">переместит файл в каталог <em>dir1</em>. Следующая команда</p>

    <p class="list-one">[me@linuxbox playground]$ <strong>mv dir1/fun dir2</strong></p>

    <p xml:lang="ru-RU">переместит файл из каталога <em>dir1</em> в каталог <em>dir2</em>. Следующая команда</p>

    <p class="list-one">[me@linuxbox playground]$ <strong>mv dir2/fun .</strong></p>

    <p xml:lang="ru-RU">вернет его в текущий рабочий каталог. Теперь посмотрим, как <span class="command char-style-override-1">mv</span> влияет на каталоги. Сначала переместите файл в каталог <em>dir1</em>:</p>

    <p class="list-one">[me@linuxbox playground]$ <strong>mv fun dir1</strong></p>

    <p xml:lang="ru-RU">затем переместите <em>dir1</em> в <em>dir2</em> и проверьте их содержимое командой <span class="command char-style-override-1">ls</span>:</p>

    <p class="list-first">[me@linuxbox playground]$ <strong>mv dir1 dir2</strong></p>

    <p class="listing-body">[me@linuxbox playground]$ <strong>ls -l dir2</strong></p>

    <p class="listing-body">итого 4</p>

    <p class="listing-body">drwxrwxr-x 2 me&#160;&#160;me&#160;&#160;&#160;4096 2012-01-11 06:06 dir1</p>

    <p class="listing-body">[me@linuxbox playground]$ <strong>ls -l dir2/dir1</strong></p>

    <p class="listing-body">итого 4</p>

    <p class="list-last">-rw-r--r-- 1 me&#160;&#160;me&#160;&#160;&#160;1650 2012-01-10 16:33 fun</p>

    <p xml:lang="ru-RU">Обратите внимание: так как <em>dir2</em> уже существует, <span class="command char-style-override-1">mv</span> переместит <em>dir1</em> в <em>dir2</em>. Если бы каталога <em>dir2</em> не было, <span class="command char-style-override-1">mv</span> просто переименовала бы <em>dir1</em> в <em>dir2</em>. В заключение верните все на свои места:</p>

    <p class="list-first">[me@linuxbox playground]$ <strong>mv dir2/dir1 .</strong></p>

    <p class="listing-body">[me@linuxbox playground]$ <strong>mv dir1/fun .</strong></p>

    <h3 xml:lang="ru-RU">Создание жестких ссылок</h3>

    <p class="Normal0" xml:lang="ru-RU">Теперь попробуем поиграть со ссылками. Сначала займемся жесткими ссылками: создайте несколько жестких ссылок для нашего файла:</p>

    <p class="list-first">[me@linuxbox playground]$ <strong>ln fun fun-hard</strong></p>

    <p class="listing-body">[me@linuxbox playground]$ <strong>ln fun dir1/fun-hard</strong></p>

    <p class="list-last">[me@linuxbox playground]$ <strong>ln fun dir2/fun-hard</strong></p>

    <p xml:lang="ru-RU">Теперь у нас есть четыре экземпляра файла <em>fun</em>. Посмотрим, что содержит наш каталог <em>playground</em>:</p>

    <p class="list-first">[me@linuxbox playground]$ <strong>ls -l</strong></p>

    <p class="listing-body">итого 16</p>

    <p class="listing-body">drwxrwxr-x 2 me&#160;&#160;me&#160;&#160;&#160;4096 2012-01-14 16:17 dir1</p>

    <p class="listing-body">drwxrwxr-x 2 me&#160;&#160;me&#160;&#160;&#160;4096 2012-01-14 16:17 dir2</p>

    <p class="listing-body">-rw-r--r-- 4 me&#160;&#160;me&#160;&#160;&#160;1650 2012-01-10 16:33 fun</p>

    <p class="list-last">-rw-r--r-- 4 me&#160;&#160;me&#160;&#160;&#160;1650 2012-01-10 16:33 fun-hard</p>

    <p xml:lang="ru-RU">Прежде всего следует обратить внимание на на второе поле в записях, соответствующих файлам <em>fun</em> и <em>fun-hard</em>. Оба они содержат <em>4</em> — число жестких ссылок на файл, существующих в данный момент. Как вы помните, файл всегда имеет хотя бы одну жесткую ссылку, потому что имя файла определяется ссылкой. Но как убедиться, что <em>fun</em> и <em>fun-hard</em> — это один и тот же файл? В этом случае команда <span class="command char-style-override-1">ls</span> нам не помощник. Вы, конечно, скажете, что <em>fun</em> и <em>fun-hard</em> имеют одинаковые размеры (поле 5), но по списку файлов нельзя уверенно утверждать, что это один и тот же файл. Чтобы решить эту задачу, заглянем поглубже.</p>

    <p xml:lang="ru-RU">Рассуждая о жестких ссылках, полезно представлять файлы состоящими из двух частей: раздела с данными, где хранится содержимое файла, и раздела с именем, где хранится имя файла. Создавая жесткую ссылку, мы фактически создаем дополнительный раздел с именем, ссылающийся на тот же раздел с данными. Цепочку дисковых блоков система присваивает тому, что называется <em>индексным узлом</em> (inode), который затем присваивается разделу с именем. То есть каждая жесткая ссылка ссылается на определенный индексный узел с содержимым файла.</p>

    <p xml:lang="ru-RU">Команда <span class="command char-style-override-1">ls</span> может извлекать эту информацию. Для этого ее нужно вызвать с параметром <span class="command char-style-override-1">-i</span>:</p>

    <p class="list-first">[me@linuxbox playground]$ <strong>ls -li</strong></p>

    <p class="listing-body">итого 16</p>

    <p class="listing-body">12353539 drwxrwxr-x 2 me&#160;&#160;me&#160;&#160;&#160;4096 2012-01-14 16:17 dir1</p>

    <p class="listing-body">12353540 drwxrwxr-x 2 me&#160;&#160;me&#160;&#160;&#160;4096 2012-01-14 16:17 dir2</p>

    <p class="listing-body">12353538 -rw-r--r-- 4 me&#160;&#160;me&#160;&#160;&#160;1650 2012-01-10 16:33 fun</p>

    <p class="list-last">12353538 -rw-r--r-- 4 me&#160;&#160;me&#160;&#160;&#160;1650 2012-01-10 16:33 fun-hard</p>

    <p xml:lang="ru-RU">В этой версии списка в первом поле отображается номер индексного узла, и, как можно видеть, оба имени, <em>fun</em> и <em>fun-hard</em>, ссылаются на индексные узлы с одним и тем же номером, а это подтверждает, что они соответствуют одному и тому же файлу.</p>

    <h3 xml:lang="ru-RU">Создание символических ссылок</h3>

    <p class="Normal0" xml:lang="ru-RU">Символические ссылки были придуманы с целью преодолеть ограничения жестких ссылок: жесткие ссылки не могут указывать на файлы, находящиеся на других физических устройствах, и не могут указывать на каталоги — только на файлы. Символическая ссылка — это файл особого типа, хранящий текстовый указатель на файл или каталог.</p>

    <p xml:lang="ru-RU">Создаются символические ссылки почти так же, как жесткие ссылки:</p>

    <p class="list-first">[me@linuxbox playground]$ <strong>ln -s fun fun-sym</strong></p>

    <p class="listing-body">[me@linuxbox playground]$ <strong>ln -s ../fun dir1/fun-sym</strong></p>

    <p class="list-last">[me@linuxbox playground]$ <strong>ln -s ../fun dir2/fun-sym</strong></p>

    <p xml:lang="ru-RU">Первый пример достаточно очевиден: мы просто добавили параметр <span class="command char-style-override-1">-s</span>, чтобы вместо жесткой ссылки создать символическую ссылку. Но два других выглядят несколько необычно. Не забывайте, что, создавая символическую ссылку, мы фактически определяем текст, описывающий местоположение целевого файла относительно символической ссылки. В этом легко убедиться, если взглянуть на вывод команды <span class="command char-style-override-1">ls</span>:</p>

    <p class="list-first">[me@linuxbox playground]$ <strong>ls -l dir1</strong></p>

    <p class="listing-body">итого 4</p>

    <p class="listing-body">-rw-r--r-- 4 me&#160;&#160;me&#160;&#160;&#160;1650 2012-01-10 16:33 fun-hard</p>

    <p class="list-last">lrwxrwxrwx 1 me&#160;&#160;me&#160;&#160;&#160;&#160;&#160;&#160;6 2012-01-15 15:17 fun-sym -&gt; ../fun</p>

    <p xml:lang="ru-RU">Запись с информацией о <em>fun-sym</em> в <em>dir1</em> сообщает, что это символическая ссылка (первый символ <span class="command char-style-override-1">l</span> в первом поле), указывающая на <em>../fun</em>, что правильно. Относительно символической ссылки <em>fun-sym</em> файл <em>fun</em> находится в каталоге уровнем выше. Обратите также внимание на размер файла символической ссылки, равный 6, — это число символов в строке <span class="command char-style-override-1">../fun</span>, а не размер файла, на который она указывает.</p>

    <p xml:lang="ru-RU">При создании символических ссылок можно также указывать абсолютные пути, например:</p>

    <p class="list-one">[me@linuxbox playground]$ <strong>ln -s /home/me/playground/fun dir1/fun-sym</strong></p>

    <p xml:lang="ru-RU">или относительные, как в более раннем примере. Но предпочтительнее использовать относительные пути, потому что это позволяет переименовывать и/или перемещать каталоги, содержащие символические ссылки, не разрушая их.</p>

    <p xml:lang="ru-RU">Помимо обычных файлов, символические ссылки могут указывать также на каталоги:</p>

    <p class="list-first">[me@linuxbox playground]$ <strong>ln -s dir1 dir1-sym</strong></p>

    <p class="listing-body">[me@linuxbox playground]$ <strong>ls -l</strong></p>

    <p class="listing-body">итого 16</p>

    <p class="listing-body">drwxrwxr-x 2 me&#160;&#160;me&#160;&#160;&#160;4096 2012-01-15 15:17 dir1</p>

    <p class="listing-body">lrwxrwxrwx 1 me&#160;&#160;me&#160;&#160;&#160;&#160;&#160;&#160;4 2012-01-16 14:45 dir1-sym -&gt; dir1</p>

    <p class="listing-body">drwxrwxr-x 2 me&#160;&#160;me&#160;&#160;&#160;4096 2012-01-15 15:17 dir2</p>

    <p class="listing-body">-rw-r--r-- 4 me&#160;&#160;me&#160;&#160;&#160;1650 2012-01-10 16:33 fun</p>

    <p class="listing-body">-rw-r--r-- 4 me&#160;&#160;me&#160;&#160;&#160;1650 2012-01-10 16:33 fun-hard</p>

    <p class="listing-body">lrwxrwxrwx 1 me&#160;&#160;me&#160;&#160;&#160;&#160;&#160;&#160;3 2012-01-15 15:15 fun-sym -&gt; fun</p>

    <h3 xml:lang="ru-RU">Удаление файлов и каталогов</h3>

    <p class="Normal0" xml:lang="ru-RU">Как уже говорилось ранее, удаление файлов и каталогов выполняется при помощи команды <span class="command char-style-override-1">rm</span>. Далее мы немного почистим нашу песочницу. Сначала удалите одну из жестких ссылок:</p>

    <p class="list-first">[me@linuxbox playground]$ <strong>rm fun-hard</strong></p>

    <p class="listing-body">[me@linuxbox playground]$ <strong>ls -l</strong></p>

    <p class="listing-body">итого 12</p>

    <p class="listing-body">drwxrwxr-x 2 me&#160;&#160;me&#160;&#160;&#160;4096 2012-01-15 15:17 dir1</p>

    <p class="listing-body">lrwxrwxrwx 1 me&#160;&#160;me&#160;&#160;&#160;&#160;&#160;&#160;4 2012-01-16 14:45 dir1-sym -&gt; dir1</p>

    <p class="listing-body">drwxrwxr-x 2 me&#160;&#160;me&#160;&#160;&#160;4096 2012-01-15 15:17 dir2</p>

    <p class="listing-body">-rw-r--r-- 3 me&#160;&#160;me&#160;&#160;&#160;1650 2012-01-10 16:33 fun</p>

    <p class="list-last">lrwxrwxrwx 1 me&#160;&#160;me&#160;&#160;&#160;&#160;&#160;&#160;3 2012-01-15 15:15 fun-sym -&gt; fun</p>

    <p xml:lang="ru-RU">Результат получился вполне ожидаемым. Файл <em>fun-hard</em> исчез, и счетчик ссылок во втором поле в записи для файла <em>fun</em> уменьшился с четырех до трех. Далее, удалите файл <em>fun</em> и ради развлечения добавьте в команду параметр <span class="command char-style-override-1">-i</span>, чтобы посмотреть, что происходит:</p>

    <p class="list-first">[me@linuxbox playground]$ <strong>rm -i fun</strong></p>

    <p class="list-last">rm: удалить обычный файл&#160;&#160;`fun'?</p>

    <p xml:lang="ru-RU">Введите <span class="command char-style-override-1">y</span> в ответ на запрос, и файл будет удален. Но давайте посмотрим на вывод <span class="command char-style-override-1">ls</span>. Заметили, что произошло с <em>fun-sym</em>? Поскольку теперь символическая ссылка указывает на несуществующий файл, она стала <em>битой</em>:</p>

    <p class="list-first">[me@linuxbox playground]$ <strong>ls -l</strong></p>

    <p class="listing-body">итого 8</p>

    <p class="listing-body">drwxrwxr-x 2 me&#160;&#160;me&#160;&#160;&#160;4096 2012-01-15 15:17 dir1</p>

    <p class="listing-body">lrwxrwxrwx 1 me&#160;&#160;me&#160;&#160;&#160;&#160;&#160;&#160;4 2012-01-16 14:45 dir1-sym -&gt; dir1</p>

    <p class="listing-body">drwxrwxr-x 2 me&#160;&#160;me&#160;&#160;&#160;4096 2012-01-15 15:17 dir2</p>

    <p class="list-last">lrwxrwxrwx 1 me&#160;&#160;me&#160;&#160;&#160;&#160;&#160;&#160;3 2012-01-15 15:15 fun-sym -&gt; fun</p>

    <p xml:lang="ru-RU">В большинстве дистрибутивов Linux команда <span class="command char-style-override-1">ls</span> особым образом настраивается на отображение битых ссылок. В Fedora битые ссылки отображаются как мигающий красный текст. Битые ссылки не представляют никакой опасности, но вносят определенную путаницу. При попытке использовать битую ссылку вы увидите:</p>

    <p class="list-first">[me@linuxbox playground]$ <strong>less fun-sym</strong></p>

    <p class="list-last">fun-sym: Нет такого файла или каталога</p>

    <p xml:lang="ru-RU">Давайте немного приберем за собой. Удалите символическую ссылку:</p>

    <p class="list-first">[me@linuxbox playground]$ <strong>rm fun-sym dir1-sym</strong></p>

    <p class="listing-body">[me@linuxbox playground]$ <strong>ls -l</strong></p>

    <p class="listing-body">итого 8</p>

    <p class="listing-body">drwxrwxr-x 2 me&#160;&#160;me&#160;&#160;&#160;4096 2012-01-15 15:17 dir1</p>

    <p class="list-last">drwxrwxr-x 2 me&#160;&#160;me&#160;&#160;&#160;4096 2012-01-15 15:17 dir2</p>

    <p xml:lang="ru-RU">Главное, что следует помнить о символических ссылках: большинство операций с файлами воздействуют на целевой элемент, а не на саму ссылку. Однако команда <span class="command char-style-override-1">rm</span> является исключением из этого правила. Когда вы удаляете ссылку, удаляется сама ссылка, а не элемент, на который она указывает.</p>

    <p xml:lang="ru-RU">В заключение удалим каталог <em>playground</em>. Для этого вернитесь в домашний каталог и вызовите команду <span class="command char-style-override-1">rm</span> с параметром рекурсивного удаления каталогов (<span class="command char-style-override-1">-r</span>), чтобы удалить каталог <em>playground</em> и все его содержимое, включая подкаталоги:</p>

    <p class="list-first">[me@linuxbox playground]$ <strong>cd</strong></p>

    <p class="listing-body">[me@linuxbox ~]$ <strong>rm -r playground</strong></p>

    <p class="Vrezka-head" xml:lang="ru-RU">создание символических ссылок с помощью графического интерфейса</p>

    <p class="Vrezka-body" xml:lang="ru-RU">Диспетчеры файлов в GNOME и KDE предоставляют простой автоматизированный способ создания символических ссылок. Если в GNOME во время перетаскивания файла мышью удерживать нажатыми клавиши <span class="interface char-style-override-2">CTRL</span> и <span class="interface char-style-override-2">SHIFT</span>, вместо копирования (или перемещения) файлов будет выполнена операция создания ссылки. В KDE, когда перетаскиваемый файл сбрасывается в целевой каталог, появляется небольшое меню, предлагающее выбор из трех операций: скопировать, переместить или создать ссылку.</p>

    <h2 id="toc_marker-7-8" xml:lang="ru-RU">Заключительное замечание</h2>

    <p class="Normal0" xml:lang="ru-RU">Мы узнали много нового, но чтобы информация усвоилась, требуется время. Выполняйте упражнения в песочнице раз за разом, пока не почувствуете, что понимаете их смысл. На данном этапе очень важно надежно усвоить, как работают основные команды управления файлами и групповые символы. Не бойтесь выйти за рамки предложенных упражнений — добавьте дополнительные файлы и каталоги, поэкспериментируйте с групповыми символами для определения групп файлов в разных операциях. Идея ссылок на первый взгляд может показаться малопонятной, поэтому уделите время их исследованию. Зачастую они оказываются настоящим спасательным кругом.</p>
  </div>
</body>
</html>